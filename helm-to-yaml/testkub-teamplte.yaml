---
# Source: testkube/charts/nats/templates/pod-disruption-budget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: testkube-values-nats
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nats
      app.kubernetes.io/instance: testkube-values
      app.kubernetes.io/name: nats
---
# Source: testkube/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-mongodb
  namespace: "testkube"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: testkube-mongodb
automountServiceAccountToken: true
---
# Source: testkube/charts/testkube-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-api-server
  labels:
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
---
# Source: testkube/charts/testkube-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-api-server-tests-job
  labels:
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
---
# Source: testkube/charts/testkube-dashboard/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-dashboard
  labels:
    app.kubernetes.io/version: "1.16.5"
    helm.sh/chart: testkube-dashboard-1.16.5
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/instance: testkube-values
---
# Source: testkube/charts/testkube-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-operator-controller-manager
  namespace: testkube
  labels:
    app.kubernetes.io/version: "1.16.25"
    helm.sh/chart: testkube-operator-1.16.25
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: testkube-values
---
# Source: testkube/charts/nats/templates/nats-box/contexts-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: nats-box
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: testkube-values-nats-box-contexts
stringData:
  default.json: |
    {
      "url": "nats://testkube-values-nats"
    }
type: Opaque
---
# Source: testkube/charts/mongodb/templates/common-scripts-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: testkube-mongodb-common-scripts
  namespace: "testkube"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
data:
  startup-probe.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep 'true'
  readiness-probe.sh: |
    #!/bin/bash
    # Run the proper check depending on the version
    [[ $(mongod -version | grep "db version") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
    . /opt/bitnami/scripts/libversion.sh
    VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
    VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
    VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
    if [[ ( "$VERSION_MAJOR" -ge 5 ) || ( "$VERSION_MAJOR" -ge 4 && "$VERSION_MINOR" -ge 4 && "$VERSION_PATCH" -ge 2 ) ]]; then
        mongosh $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep 'true'
    else
        mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep 'true'
    fi
  ping-mongodb.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval "db.adminCommand('ping')"
---
# Source: testkube/charts/nats/templates/config-map.yaml
apiVersion: v1
data:
  nats.conf: |
    {
      "http_port": 8222,
      "jetstream": {
        "max_file_store": 10Gi,
        "max_memory_store": 0,
        "store_dir": "/data"
      },
      "lame_duck_duration": "30s",
      "lame_duck_grace_period": "10s",
      "max_payload": 8MB,
      "pid_file": "/var/run/nats/nats.pid",
      "port": 4222,
      "server_name": $SERVER_NAME
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: testkube-values-nats-config
---
# Source: testkube/charts/testkube-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: testkube-api-server
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
data:
  executors.json: |-
    [
      {
        "name": "tracetest-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-tracetest-executor:1.16.27",
          "command": [
            "tracetest"
          ],
          "args": [
            "test",
            "run",
            "--server-url",
            "<tracetestServer>",
            "--definition",
            "<filePath>",
            "--wait-for-result",
            "--output",
            "pretty"
          ],
          "types": [
            "tracetest/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "tracetest",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-tracetest"
          }
        }
      },
      {
        "name": "zap-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-zap-executor:1.16.27",
          "command": [
            "<pythonScriptPath>"
          ],
          "args": [
            "<fileArgs>"
          ],
          "types": [
            "zap/api",
            "zap/baseline",
            "zap/full"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "zap",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-zap"
          }
        }
      },
      {
        "name": "playwright-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-playwright-executor:1.16.27",
          "command": [
            "<depManager>"
          ],
          "args": [
            "<depCommand>",
            "playwright",
            "test"
          ],
          "types": [
            "playwright/test"
          ],
          "contentTypes": [
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "playwright",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-playwright"
          }
        }
      },
      {
        "name": "jmeter-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-jmeter-executor:1.16.27",
          "command": [
            "<entryPoint>"
          ],
          "args": [
            "-n",
            "-j",
            "<logFile>",
            "-t",
            "<runPath>",
            "-l",
            "<jtlFile>",
            "-o",
            "<reportFile>",
            "-e",
            "<envVars>"
          ],
          "types": [
            "jmeter/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "jmeter",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-jmeter"
          }
        }
      },
      {
        "name": "jmeterd-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-jmeterd-executor:1.16.27",
          "command": [
            "<entryPoint>"
          ],
          "slaves": {
            "image": "kubeshop/testkube-jmeterd-slave:1.16.27"
          },
          "args": [
            "-n",
            "-j",
            "<logFile>",
            "-t",
            "<runPath>",
            "-l",
            "<jtlFile>",
            "-o",
            "<reportFile>",
            "-e",
            "<envVars>"
          ],
          "types": [
            "jmeterd/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "jmeter",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-jmeter"
          }
        }
      },
      {
        "name": "ginkgo-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-ginkgo-executor:1.16.27",
          "command": [
            "ginkgo"
          ],
          "args": [
            "-r",
            "-p",
            "--randomize-all",
            "--randomize-suites",
            "--keep-going",
            "--trace",
            "--junit-report",
            "<reportFile>",
            "<envVars>",
            "<runPath>"
          ],
          "types": [
            "ginkgo/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts",
            "junit-report"
          ],
          "meta": {
            "iconURI": "ginkgo",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-ginkgo"
          }
        }
      },
      {
        "name": "maven-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-maven-executor:1.16.27",
          "command": [
            "mvn"
          ],
          "args": [
            "--settings",
            "<settingsFile>",
            "<goalName>",
            "-Duser.home",
            "<mavenHome>"
          ],
          "types": [
            "maven/project",
            "maven/test",
            "maven/integration-test"
          ],
          "contentTypes": [
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "maven",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-maven"
          }
        }
      },
      {
        "name": "gradle-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-gradle-executor:1.16.27",
          "command": [
            "gradle"
          ],
          "args": [
            "--no-daemon",
            "<taskName>",
            "-p",
            "<projectDir>"
          ],
          "types": [
            "gradle/project",
            "gradle/test",
            "gradle/integrationTest"
          ],
          "contentTypes": [
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "gradle",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-gradle"
          }
        }
      },
      {
        "name": "kubepug-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-kubepug-executor:1.16.27",
          "command": [
            "kubepug"
          ],
          "args": [
            "--format=json",
            "--input-file",
            "<runPath>"
          ],
          "types": [
            "kubepug/yaml",
            "kubepug/json"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "kubepug",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-kubepug"
          }
        }
      },
      {
        "name": "soapui-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-soapui-executor:1.16.27",
          "command": [
            "/bin/sh",
            "/usr/local/SmartBear/EntryPoint.sh"
          ],
          "args": [
            "<runPath>"
          ],
          "types": [
            "soapui/xml"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "soapui",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-soapui"
          }
        }
      },
      {
        "name": "k6-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-k6-executor:1.16.27",
          "command": [
            "k6"
          ],
          "args": [
            "<k6Command>",
            "<envVars>",
            "<runPath>"
          ],
          "types": [
            "k6/script"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "k6",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-k6"
          }
        }
      },
      {
        "name": "cypress-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-cypress-executor:1.16.27",
          "command": [
            "./node_modules/cypress/bin/cypress"
          ],
          "args": [
            "run",
            "--reporter",
            "junit",
            "--reporter-options",
            "mochaFile=<reportFile>,toConsole=false",
            "--project",
            "<projectPath>",
            "--env",
            "<envVars>"
          ],
          "types": [
            "cypress/project"
          ],
          "contentTypes": [
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts",
            "junit-report"
          ],
          "meta": {
            "iconURI": "cypress",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-cypress"
          }
        }
      },
      {
        "name": "curl-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-curl-executor:1.16.27",
          "command": [
            "curl"
          ],
          "args": [
            "-is"
          ],
          "types": [
            "curl/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "curl",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-curl"
          }
        }
      },
      {
        "name": "postman-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-postman-executor:1.16.27",
          "command": [
            "newman"
          ],
          "args": [
            "run",
            "<runPath>",
            "-e",
            "<envFile>",
            "--reporters",
            "cli,json",
            "--reporter-json-export",
            "<reportFile>"
          ],
          "types": [
            "postman/collection"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "postman",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-postman"
          }
        }
      },
      {
        "name": "artillery-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-artillery-executor:1.16.27",
          "command": [
            "artillery"
          ],
          "args": [
            "run",
            "<runPath>",
            "--dotenv",
            "<envFile>",
            "-o",
            "<reportFile>"
          ],
          "types": [
            "artillery/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "artillery",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-artillery"
          }
        }
      },
      {
        "name": "scraper-executor",
        "executor": {
          "executorType": "scraper",
          "image": "kubeshop/testkube-scraper-executor:1.16.27",
          "types": []
        }
      },
      {
        "name": "init-executor",
        "executor": {
          "executorType": "init",
          "image": "kubeshop/testkube-init-executor:1.16.27",
          "types": []
        }
      },
      {
        "name": "logs-sidecar",
        "executor": {
          "executorType": "sidecar",
          "image": "kubeshop/testkube-logs-sidecar:1.16.27",
          "types": []
        }
      },
      {
        "name": "logs-sidecar",
        "executor": {
          "executorType": "sidecar",
          "image": "kubeshop/testkube-logs-sidecar:1.16.27",
          "types": []
        }
      }
    ]
  job-container-template.yml: |-
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: "{{ .Name }}"
      namespace: {{ .Namespace }}
    spec:
      {{- if gt .ActiveDeadlineSeconds 0 }}
      activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
      {{- end }}
      template:
        spec:
          {{- if ne .InitImage "" }}
          initContainers:
          - name: {{ .Name }}-init
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .InitImage }}
            {{- else }}
            image: {{ .InitImage }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            command:
              - "/bin/runner"
              - '{{ .Jsn }}'
            volumeMounts:
            - name: data-volume
              mountPath: /data
            {{- if .CertificateSecret }}
            - name: {{ .CertificateSecret }}
              mountPath: /etc/certs
            {{- end }}
            {{- if .ArtifactRequest }}
              {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
            - name: artifact-volume
              mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
            {{- end }}
            {{- range $configmap := .EnvConfigMaps }}
            {{- if and $configmap.Mount $configmap.Reference }}
            - name: {{ $configmap.Reference.Name }}
              mountPath: {{ $configmap.MountPath }}
            {{- end }}
            {{- end }}
            {{- range $secret := .EnvSecrets }}
            {{- if and $secret.Mount $secret.Reference }}
            - name: {{ $secret.Reference.Name }}
              mountPath: {{ $secret.MountPath }}
            {{- end }}
            {{- end }}
          {{- end }}
          containers:
          {{ if .Features.LogsV2 -}}
          - name: "{{ .Name }}-logs"
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .LogSidecarImage }}
            {{- else }}
            image: {{ .LogSidecarImage }}
            {{- end }}
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: {{ .Debug }}
            - name: NAMESPACE
              value: {{ .Namespace }}
            - name: NATS_URI
              value: {{ .NatsUri }}
            - name: GROUP
              value: test
            - name: SOURCE
              value: "test:{{ .Name }}"
            - name: ID
              value: "{{ .Name }}"
          {{- end }}
          - name: "{{ .Name }}"
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .Image }}
            {{- else }}
            image: {{ .Image }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            {{- if gt (len .Command) 0 }}
            command:
            {{- range $cmd := .Command }}
            - {{ $cmd -}}
            {{- end }}
            {{- end -}}
            {{- if gt (len .Args) 0 }}
            args:
            {{- range $arg := .Args }}
            - {{ $arg -}}
            {{- end }}
            {{- end }}
            {{- if .WorkingDir }}
            workingDir: {{ .WorkingDir }}
            {{- end }}
            volumeMounts:
            - name: data-volume
              mountPath: /data
            {{- if .CertificateSecret }}
            - name: {{ .CertificateSecret }}
              mountPath: /etc/certs
            {{- end }}
            {{- if .ArtifactRequest }}
              {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
            - name: artifact-volume
              mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
            {{- end }}
            {{- range $configmap := .EnvConfigMaps }}
            {{- if and $configmap.Mount $configmap.Reference }}
            - name: {{ $configmap.Reference.Name }}
              mountPath: {{ $configmap.MountPath }}
            {{- end }}
            {{- end }}
            {{- range $secret := .EnvSecrets }}
            {{- if and $secret.Mount $secret.Reference }}
            - name: {{ $secret.Reference.Name }}
              mountPath: {{ $secret.MountPath }}
            {{- end }}
            {{- end }}
          volumes:
          - name: data-volume
            emptyDir: {}
          {{- if .CertificateSecret }}
          - name: {{ .CertificateSecret }}
            secret:
              secretName: {{ .CertificateSecret }}
          {{- end }}
          {{- if .ArtifactRequest }}
            {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
          - name: artifact-volume
            persistentVolumeClaim:
              claimName: {{ .Name }}-pvc
            {{- end }}
          {{- end }}
          {{- range $configmap := .EnvConfigMaps }}
          {{- if and $configmap.Mount $configmap.Reference }}
          - name: {{ $configmap.Reference.Name }}
            configmap:
              name: {{ $configmap.Reference.Name }}
          {{- end }}
          {{- end }}
          {{- range $secret := .EnvSecrets }}
          {{- if and $secret.Mount $secret.Reference }}
          - name: {{ $secret.Reference.Name }}
            secret:
              secretName: {{ $secret.Reference.Name }}
          {{- end }}
          {{- end }}
          restartPolicy: Never
          {{- if .ServiceAccountName }}
          serviceAccountName: {{ .ServiceAccountName }}
          {{- end }}
          {{- if gt (len .ImagePullSecrets) 0 }}
          imagePullSecrets:
          {{- range $secret := .ImagePullSecrets }}
          - name: {{ $secret -}}
          {{- end }}
          {{- end }}
      backoffLimit: 0
      ttlSecondsAfterFinished: {{ .DelaySeconds }}
    
  job-scraper-template.yml: |-
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: {{ .Name }}-scraper
      namespace: {{ .Namespace }}
    spec:
      {{- if gt .ActiveDeadlineSeconds 0 }}
      activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
      {{- end }}
      template:
        spec:
          containers:
          {{ if .Features.LogsV2 -}}
          - name: "{{ .Name }}-logs"
            image: {{ .Registry }}/{{ .LogSidecarImage }}
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: {{ .Debug }}
            - name: NAMESPACE
              value: {{ .Namespace }}
            - name: NATS_URI
              value: {{ .NatsUri }}
            - name: ID
              value: {{ .Name }}
            - name: GROUP
              value: scraper
            - name: SOURCE
              value: "scraper:{{ .Name }}"
          {{- end }}
          - name: {{ .Name }}-scraper
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .ScraperImage }}
            {{- else }}
            image: {{ .ScraperImage }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            command:
              - "/bin/runner"
              - '{{ .Jsn }}'
            {{- if .ArtifactRequest }}
              {{- if .ArtifactRequest.VolumeMountPath }}
            volumeMounts:
              - name: artifact-volume
                mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
            {{- end }}
          {{- if .ArtifactRequest }}
            {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
          volumes:
            - name: artifact-volume
              persistentVolumeClaim:
                claimName: {{ .Name }}-pvc
            {{- end }}
          {{- end }}
          restartPolicy: Never
          {{- if .ServiceAccountName }}
          serviceAccountName: {{ .ServiceAccountName }}
          {{- end }}
          {{- if gt (len .ImagePullSecrets) 0 }}
          imagePullSecrets:
          {{- range $secret := .ImagePullSecrets }}
          - name: {{ $secret -}}
          {{- end }}
          {{- end }}
      backoffLimit: 0
      ttlSecondsAfterFinished: {{ .DelaySeconds }}
    
  job-template.yml: |-
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: "{{ .Name }}"
      namespace: {{ .Namespace }}
    spec:
      {{- if gt .ActiveDeadlineSeconds 0 }}
      activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
      {{- end }}
      template:
        spec:
          initContainers:
          - name: {{ .Name }}-init
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .InitImage }}
            {{- else }}
            image: {{ .InitImage }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            command:
              - "/bin/runner"
              - '{{ .Jsn }}'
            volumeMounts:
            - name: data-volume
              mountPath: /data
            {{- if .CertificateSecret }}
            - name: {{ .CertificateSecret }}
              mountPath: /etc/certs
            {{- end }}
            {{- if .ArtifactRequest }}
              {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
            - name: artifact-volume
              mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
            {{- end }}
            {{- range $configmap := .EnvConfigMaps }}
            {{- if and $configmap.Mount $configmap.Reference }}
            - name: {{ $configmap.Reference.Name }}
              mountPath: {{ $configmap.MountPath }}
            {{- end }}
            {{- end }}
            {{- range $secret := .EnvSecrets }}
            {{- if and $secret.Mount $secret.Reference }}
            - name: {{ $secret.Reference.Name }}
              mountPath: {{ $secret.MountPath }}
            {{- end }}
            {{- end }}
          containers:
          {{ if .Features.LogsV2 -}}
          - name: "{{ .Name }}-logs"
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .LogSidecarImage }}
            {{- else }}
            image: {{ .LogSidecarImage }}
            {{- end }}
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: {{ .Debug }}
            - name: NAMESPACE
              value: {{ .Namespace }}
            - name: NATS_URI
              value: {{ .NatsUri }}
            - name: ID
              value: {{ .Name }}
            - name: GROUP
              value: test
            - name: SOURCE
              value: "test:{{ .Name }}"
          {{- end }}
          - name: "{{ .Name }}"
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .Image }}
            {{- else }}
            image: {{ .Image }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            command:
              - "/bin/runner"
              - '{{ .Jsn }}'
            volumeMounts:
            - name: data-volume
              mountPath: /data
            {{- if .CertificateSecret }}
            - name: {{ .CertificateSecret }}
              mountPath: /etc/certs
            {{- end }}
            {{- if .ArtifactRequest }}
              {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
            - name: artifact-volume
              mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
            {{- end }}
            {{- range $configmap := .EnvConfigMaps }}
            {{- if and $configmap.Mount $configmap.Reference }}
            - name: {{ $configmap.Reference.Name }}
              mountPath: {{ $configmap.MountPath }}
            {{- end }}
            {{- end }}
            {{- range $secret := .EnvSecrets }}
            {{- if and $secret.Mount $secret.Reference }}
            - name: {{ $secret.Reference.Name }}
              mountPath: {{ $secret.MountPath }}
            {{- end }}
            {{- end }}
          volumes:
          - name: data-volume
            emptyDir: {}
          {{- if .CertificateSecret }}
          - name: {{ .CertificateSecret }}
            secret:
              secretName: {{ .CertificateSecret }}
          {{- end }}
          {{- if .ArtifactRequest }}
            {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
          - name: artifact-volume
            persistentVolumeClaim:
              claimName: {{ .Name }}-pvc
            {{- end }}
          {{- end }}
          {{- range $configmap := .EnvConfigMaps }}
          {{- if and $configmap.Mount $configmap.Reference }}
          - name: {{ $configmap.Reference.Name }}
            configmap:
              name: {{ $configmap.Reference.Name }}
          {{- end }}
          {{- end }}
          {{- range $secret := .EnvSecrets }}
          {{- if and $secret.Mount $secret.Reference }}
          - name: {{ $secret.Reference.Name }}
            secret:
              secretName: {{ $secret.Reference.Name }}
          {{- end }}
          {{- end }}
          restartPolicy: Never
          {{- if .ServiceAccountName }}
          serviceAccountName: {{ .ServiceAccountName }}
          {{- end }}
          {{- if gt (len .ImagePullSecrets) 0 }}
          imagePullSecrets:
          {{- range $secret := .ImagePullSecrets }}
          - name: {{ $secret -}}
          {{- end }}
          {{- end }}
      backoffLimit: 0
      ttlSecondsAfterFinished: 180
    
  pvc-template.yml: |-
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: {{ .Name }}-pvc
      namespace: {{ .Namespace }}
    spec:
      storageClassName: {{ .ArtifactRequest.StorageClassName }}
      accessModes:
      {{- if .ArtifactRequest.SharedBetweenPods }}
        - ReadWriteMany
      {{- else }}
        - ReadWriteOnce
      {{- end }}
      resources:
        requests:
          storage: 1Gi
    
  slack-config.json: |-
    [
      {
        "ChannelID": "",
        "selector": {},
        "testName": [],
        "testSuiteName": [],
        "events": [
          "start-test",
          "end-test-success",
          "end-test-failed",
          "end-test-aborted",
          "end-test-timeout",
          "start-testsuite",
          "end-testsuite-success",
          "end-testsuite-failed",
          "end-testsuite-aborted",
          "end-testsuite-timeout"
        ]
      }
    ]
    
  slack-template.json: |-
    {
      "blocks": [
        {
          "type": "section",
          "text": {
            "type": "plain_text",
            "emoji": true,
            "text": "Execution {{ .ExecutionName }} of {{ .TestName }} status {{ .Status }}"
          }
        },
        {
          "type": "context",
          "elements": [
            {
              "type": "image",
                "image_url": "{{ if eq .Status "failed" }}https://raw.githubusercontent.com/kubeshop/testkube/d3380bc4bf4534ef1fb88cdce5d346dca8898986/assets/imageFailed.png{{ else if eq .Status "passed" }}https://raw.githubusercontent.com/kubeshop/testkube/d3380bc4bf4534ef1fb88cdce5d346dca8898986/assets/imagePassed.png{{ else }}https://raw.githubusercontent.com/kubeshop/testkube/d3380bc4bf4534ef1fb88cdce5d346dca8898986/assets/imagePending.png{{ end }}",
              "alt_text": "notifications warning icon"
            }
            {{ if (gt .TotalSteps 0 )}}
            ,
            {
              "type": "mrkdwn",
              "text": "*   {{ .FailedSteps }}/{{ .TotalSteps }} STEPS FAILED*"
            }
            {{ end }}
          ]
        },
        {
          "type": "divider"
        },
        {
          "type": "section",
          "fields": [
            {
              "type": "mrkdwn",
              "text": "*Test Name*"
            },
            {
              "type": "mrkdwn",
              "text": "*Type*"
            },
            {
              "type": "plain_text",
              "text": "{{ .TestName }}",
              "emoji": true
            },
            {
              "type": "plain_text",
              "text": "{{ .TestType }}",
              "emoji": true
            }
          ]
        },
        {{ if .Namespace}}
        {
          "type": "section",
          "fields": [
            {
              "type": "mrkdwn",
              "text": "*Namespace*"
            },
            {
              "type": "mrkdwn",
              "text": "*Labels*"
            },
            {
              "type": "plain_text",
              "text": "{{ .Namespace }} ",
              "emoji": true
            },
            {
              "type": "plain_text",
              "text": "{{ .Labels }} ",
              "emoji": true
            }
          ]
        },
        {{ end }}
        {
          "type": "section",
          "fields": [
            {
              "type": "mrkdwn",
              "text": "*Start Time*"
            },
            {
              "type": "mrkdwn",
              "text": "*End Time*"
            },
            {
              "type": "plain_text",
              "text": "{{ .StartTime }}",
              "emoji": true
            },
            {
              "type": "plain_text",
              "text": "{{ .EndTime }}",
              "emoji": true
            }
          ]
        },
        {{ if .Duration }}
        {
          "type": "section",
          "fields": [
            {
              "type": "mrkdwn",
              "text": "*Duration*"
            },
            {
              "type": "mrkdwn",
              "text": " "
            },
            {
              "type": "plain_text",
              "text": "{{ .Duration }}",
              "emoji": true
            }
          ]
        },
        {{ end }}
        {
          "type": "divider"
        },
        {{ if .ClusterName }}
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Cluster Name: {{ .ClusterName }}"
          }
        },
        {{ end }}
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "*Test Execution CLI*"
          }
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "`kubectl testkube get execution {{ .ExecutionName }} `\n"
          }
        },
        {{ if eq .TestType "Test Suite" }}
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Test Suite URI: {{ .DashboardURI }}/test-suites/{{ .TestName }}"
          }
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Test Suite Execution URI: {{ .DashboardURI }}/test-suites/{{ .TestName }}/executions/{{ .ExecutionID }}"
          }
        },
        {{ else }}
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Test URI: {{ .DashboardURI }}/tests/{{ .TestName }}"
          }
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Test Execution URI: {{ .DashboardURI }}/tests/{{ .TestName }}/executions/{{ .ExecutionID }}"
          }
        },
        {{ end }}
        {
          "type": "divider"
        }
      ]
    }
    
  slave-pod-template.yml: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: "{{ .Name }}"
      namespace: {{ .Namespace }}
      ownerReferences:
      - apiVersion: batch/v1
        kind: job
        name: {{ .JobName }}
        uid: {{ .JobUID }}
    spec:
      {{- if gt .ActiveDeadlineSeconds 0 }}
      activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
      {{- end }}
      initContainers:
      - name: init
        {{- if .Registry }}
        image: {{ .Registry }}/{{ .InitImage }}
        {{- else }}
        image: {{ .InitImage }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        command: 
          - "/bin/runner"
          - '{{ .Jsn }}'
        volumeMounts:
        - name: data-volume
          mountPath: /data
        {{- if .CertificateSecret }}
        - name: {{ .CertificateSecret }}
          mountPath: /etc/certs
        {{- end }}
        {{- if .ArtifactRequest }}
          {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
        - name: artifact-volume
          mountPath: {{ .ArtifactRequest.VolumeMountPath }}
          {{- end }}
        {{- end }}
        {{- range $configmap := .EnvConfigMaps }}
        {{- if and $configmap.Mount $configmap.Reference }}
        - name: {{ $configmap.Reference.Name }}
          mountPath: {{ $configmap.MountPath }}
        {{- end }}
        {{- end }}
        {{- range $secret := .EnvSecrets }}
        {{- if and $secret.Mount $secret.Reference }}
        - name: {{ $secret.Reference.Name }}
          mountPath: {{ $secret.MountPath }}
        {{- end }}
        {{- end }}
      containers:
      - name: main
        {{- if .Registry }}
        image: {{ .Registry }}/{{ .Image }}
        {{- else }}
        image: {{ .Image }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        ports:
        {{- range $port := .Ports }}
        - name: {{ $port.Name }}
          containerPort: {{ $port.ContainerPort }}
        {{- end}}
        {{- range $port := .Ports }}
        {{- if eq $port.Name "server-port" }}  
        livenessProbe:
          tcpSocket:
            port: {{ $port.ContainerPort }}
          failureThreshold: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          tcpSocket:
            port: {{ $port.ContainerPort }}
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
        {{- end }}
        {{- end }}
        {{- if .Resources }}
        resources:
          {{- if .Resources.Limits }}
          limits:
            {{- if .Resources.Limits.Cpu }}
            cpu: {{ .Resources.Limits.Cpu }}
            {{- end }}
            {{- if .Resources.Limits.Memory }}
            memory: {{ .Resources.Limits.Memory }}
            {{- end }}
          {{- end }}
          {{- if .Resources.Requests }}
          requests:
            {{- if .Resources.Requests.Cpu }}
            cpu: {{ .Resources.Requests.Cpu }}
            {{- end }}
            {{- if .Resources.Requests.Memory }}
            memory: {{ .Resources.Requests.Memory }}
            {{- end }}
          {{- end }}
        {{- end }}
        volumeMounts:
        - name: data-volume
          mountPath: /data
        {{- if .CertificateSecret }}
        - name: {{ .CertificateSecret }}
          mountPath: /etc/certs
        {{- end }}
        {{- if .ArtifactRequest }}
          {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
        - name: artifact-volume
          mountPath: {{ .ArtifactRequest.VolumeMountPath }}
          {{- end }}
        {{- end }}
        {{- range $configmap := .EnvConfigMaps }}
        {{- if and $configmap.Mount $configmap.Reference }}
        - name: {{ $configmap.Reference.Name }}
          mountPath: {{ $configmap.MountPath }}
        {{- end }}
        {{- end }}
        {{- range $secret := .EnvSecrets }}
        {{- if and $secret.Mount $secret.Reference }}
        - name: {{ $secret.Reference.Name }}
          mountPath: {{ $secret.MountPath }}
        {{- end }}
        {{- end }}
      volumes:
      - name: data-volume
        emptyDir: {}
      {{- if .CertificateSecret }}
      - name: {{ .CertificateSecret }}
        secret:
          secretName: {{ .CertificateSecret }}
      {{- end }}
      {{- if .ArtifactRequest }}
        {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
      - name: artifact-volume
        persistentVolumeClaim:
          claimName: {{ .JobName }}-pvc
        {{- end }}
      {{- end }}
      {{- range $configmap := .EnvConfigMaps }}
      {{- if and $configmap.Mount $configmap.Reference }}
      - name: {{ $configmap.Reference.Name }}
        configmap:
          name: {{ $configmap.Reference.Name }}
      {{- end }}
      {{- end }}
      {{- range $secret := .EnvSecrets }}
      {{- if and $secret.Mount $secret.Reference }}
      - name: {{ $secret.Reference.Name }}
        secret:
          secretName: {{ $secret.Reference.Name }}
      {{- end }}
      {{- end }}
      restartPolicy: Always
      {{- if .ServiceAccountName }}
      serviceAccountName: {{ .ServiceAccountName }}
      {{- end }}
      {{- if gt (len .ImagePullSecrets) 0 }}
      imagePullSecrets:
      {{- range $secret := .ImagePullSecrets }}
      - name: {{ $secret -}}
      {{- end }}
      {{- end }}
    
  enabledExecutors: ""
---
# Source: testkube/charts/testkube-operator/templates/configmap.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 47f0dfc1.testkube.io
kind: ConfigMap
metadata:
  name: testkube-operator-manager-config
  namespace: testkube
---
# Source: testkube/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: testkube-global-config
data:
  helmchartVersion: 1.16.39
---
# Source: testkube/charts/mongodb/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: testkube-mongodb
  namespace: "testkube"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: testkube/charts/testkube-api/templates/minio.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # This name uniquely identifies the PVC. This is used in deployment.
  name: testkube-minio-pv-claim-testkube
spec:
  accessModes:
  - "ReadWriteOnce"
  resources:
    requests:
      storage: 10Gi
---
# Source: testkube/charts/testkube-operator/templates/executor.testkube.io_executors.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: executors.executor.testkube.io
spec:
  group: executor.testkube.io
  names:
    kind: Executor
    listKind: ExecutorList
    plural: executors
    singular: executor
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Executor is the Schema for the executors API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExecutorSpec defines the desired state of Executor
            properties:
              args:
                description: executor binary arguments
                items:
                  type: string
                type: array
              command:
                description: executor default binary command
                items:
                  type: string
                type: array
              content_types:
                description: ContentTypes list of handled content types
                items:
                  enum:
                  - string
                  - file-uri
                  - git-file
                  - git-dir
                  - git
                  type: string
                type: array
              executor_type:
                description: ExecutorType one of "rest" for rest openapi based executors
                  or "job" which will be default runners for testkube or "container"
                  for container executors
                enum:
                - job
                - container
                type: string
              features:
                description: Features list of possible features which executor handles
                items:
                  enum:
                  - artifacts
                  - junit-report
                  type: string
                type: array
              image:
                description: Image for kube-job
                type: string
              imagePullSecrets:
                description: container executor default image pull secrets
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              job_template:
                description: Job template to launch executor
                type: string
              jobTemplateReference:
                description: name of the template resource
                type: string
              meta:
                description: Meta data about executor
                properties:
                  docsURI:
                    description: URI for executor docs
                    type: string
                  iconURI:
                    description: URI for executor icon
                    type: string
                  tooltips:
                    additionalProperties:
                      type: string
                    description: executor tooltips
                    type: object
                type: object
              slaves:
                description: Slaves data to run test in distributed environment
                properties:
                  image:
                    type: string
                required:
                - image
                type: object
              types:
                description: Types defines what types can be handled by executor e.g.
                  "postman/collection", ":curl/command" etc
                items:
                  type: string
                type: array
              uri:
                description: URI for rest based executors
                type: string
              useDataDirAsWorkingDir:
                description: use data dir as working dir for executor
                type: boolean
            type: object
          status:
            description: ExecutorStatus defines the observed state of Executor
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/executor.testkube.io_webhooks.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: webhooks.executor.testkube.io
spec:
  group: executor.testkube.io
  names:
    kind: Webhook
    listKind: WebhookList
    plural: webhooks
    singular: webhook
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Webhook is the Schema for the webhooks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WebhookSpec defines the desired state of Webhook
            properties:
              events:
                description: Events declare list if events on which webhook should
                  be called
                items:
                  enum:
                  - start-test
                  - end-test-success
                  - end-test-failed
                  - end-test-aborted
                  - end-test-timeout
                  - start-testsuite
                  - end-testsuite-success
                  - end-testsuite-failed
                  - end-testsuite-aborted
                  - end-testsuite-timeout
                  type: string
                type: array
              headers:
                additionalProperties:
                  type: string
                description: webhook headers (golang template supported)
                type: object
              payloadObjectField:
                description: will load the generated payload for notification inside
                  the object
                type: string
              payloadTemplate:
                description: golang based template for notification payload
                type: string
              payloadTemplateReference:
                description: name of the template resource
                type: string
              selector:
                description: Labels to filter for tests and test suites
                type: string
              uri:
                description: Uri is address where webhook should be made (golang template
                  supported)
                type: string
            type: object
          status:
            description: WebhookStatus defines the observed state of Webhook
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_scripts.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: scripts.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: Script
    listKind: ScriptList
    plural: scripts
    singular: script
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Script is the Schema for the scripts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScriptSpec defines the desired state of Script
            properties:
              content:
                description: script content as string (content depends from executor)
                type: string
              input-type:
                description: 'script content type can be:  - direct content - created
                  from file, - git repo directory checkout in case when test is some
                  kind of project or have more than one file,'
                type: string
              name:
                description: script execution custom name
                type: string
              params:
                additionalProperties:
                  type: string
                description: execution params passed to executor
                type: object
              repository:
                description: repository details if exists
                properties:
                  branch:
                    description: branch/tag name for checkout
                    type: string
                  path:
                    description: if needed we can checkout particular path (dir or
                      file) in case of BIG/mono repositories
                    type: string
                  token:
                    description: git auth token for private repositories
                    type: string
                  type:
                    description: Type_ repository type
                    type: string
                  uri:
                    description: Uri of content file or git directory
                    type: string
                  username:
                    description: git auth username for private repositories
                    type: string
                required:
                - branch
                - type
                - uri
                type: object
              tags:
                items:
                  type: string
                type: array
              type:
                description: script type
                type: string
            type: object
          status:
            description: ScriptStatus defines the observed state of Script
            properties:
              executions_count:
                type: integer
              last_execution:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2
    schema:
      openAPIV3Schema:
        description: Script is the Schema for the scripts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScriptSpec defines the desired state of Script
            properties:
              content:
                description: script content object
                properties:
                  data:
                    description: script content body
                    type: string
                  repository:
                    description: repository of script content
                    properties:
                      branch:
                        description: branch/tag name for checkout
                        type: string
                      path:
                        description: if needed we can checkout particular path (dir
                          or file) in case of BIG/mono repositories
                        type: string
                      token:
                        description: git auth token for private repositories
                        type: string
                      type:
                        description: VCS repository type
                        type: string
                      uri:
                        description: uri of content file or git directory
                        type: string
                      username:
                        description: git auth username for private repositories
                        type: string
                    required:
                    - branch
                    - type
                    - uri
                    type: object
                  type:
                    description: script type
                    type: string
                  uri:
                    description: uri of script content
                    type: string
                type: object
              name:
                description: script execution custom name
                type: string
              params:
                additionalProperties:
                  type: string
                description: execution params passed to executor
                type: object
              tags:
                description: script tags
                items:
                  type: string
                type: array
              type:
                description: script type
                type: string
            type: object
          status:
            description: ScriptStatus defines the observed state of Script
            properties:
              executions_count:
                type: integer
              last_execution:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_templates.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: templates.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: Template
    listKind: TemplateList
    plural: templates
    singular: template
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Template is the Schema for the Templates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TemplateSpec defines the desired state of Template
            properties:
              body:
                description: template body to use
                type: string
              type:
                description: TemplateType defines template type by purpose
                enum:
                - job
                - container
                - cronjob
                - scraper
                - pvc
                - webhook
                - pod
                type: string
            required:
            - body
            - type
            type: object
          status:
            description: TemplateStatus defines the observed state of Template
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testexecutions.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testexecutions.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestExecution
    listKind: TestExecutionList
    plural: testexecutions
    singular: testexecution
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestExecution is the Schema for the testexecutions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestExecutionSpec defines the desired state of TestExecution
            properties:
              executionRequest:
                description: test execution request body
                properties:
                  activeDeadlineSeconds:
                    description: Optional duration in seconds the pod may be active
                      on the node relative to StartTime before the system will actively
                      try to mark it failed and kill associated containers. Value
                      must be a positive integer.
                    format: int64
                    type: integer
                  args:
                    description: additional executor binary arguments
                    items:
                      type: string
                    type: array
                  argsMode:
                    description: usage mode for arguments
                    enum:
                    - append
                    - override
                    type: string
                  artifactRequest:
                    description: artifact request body with test artifacts
                    properties:
                      dirs:
                        description: artifact directories for scraping
                        items:
                          type: string
                        type: array
                      masks:
                        description: regexp to filter scraped artifacts, single or
                          comma separated
                        items:
                          type: string
                        type: array
                      omitFolderPerExecution:
                        description: don't use a separate folder for execution artifacts
                        type: boolean
                      sharedBetweenPods:
                        description: whether to share volume between pods
                        type: boolean
                      storageBucket:
                        description: artifact bucket storage
                        type: string
                      storageClassName:
                        description: artifact storage class name for container executor
                        type: string
                      volumeMountPath:
                        description: artifact volume mount path for container executor
                        type: string
                    required:
                    - storageClassName
                    - volumeMountPath
                    type: object
                  command:
                    description: executor binary command
                    items:
                      type: string
                    type: array
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  envConfigMaps:
                    description: config map references
                    items:
                      description: Reference to env resource
                      properties:
                        mapToVariables:
                          description: whether we shoud map to variables from resource
                          type: boolean
                        mount:
                          description: whether we shoud mount resource
                          type: boolean
                        mountPath:
                          description: where we shoud mount resource
                          type: string
                        reference:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - reference
                      type: object
                    type: array
                  envSecrets:
                    description: secret references
                    items:
                      description: Reference to env resource
                      properties:
                        mapToVariables:
                          description: whether we shoud map to variables from resource
                          type: boolean
                        mount:
                          description: whether we shoud mount resource
                          type: boolean
                        mountPath:
                          description: where we shoud mount resource
                          type: string
                        reference:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - reference
                      type: object
                    type: array
                  envs:
                    additionalProperties:
                      type: string
                    description: 'Environment variables passed to executor. Deprecated:
                      use Basic Variables instead'
                    type: object
                  executePostRunScriptBeforeScraping:
                    description: execute post run script before scraping (prebuilt
                      executor only)
                    type: boolean
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: test execution labels
                    type: object
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  image:
                    description: container executor image
                    type: string
                  imagePullSecrets:
                    description: container executor image pull secrets
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  isVariablesFileUploaded:
                    type: boolean
                  jobTemplate:
                    description: job template extensions
                    type: string
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  negativeTest:
                    description: negative test will fail the execution if it is a
                      success and it will succeed if it is a failure
                    type: boolean
                  number:
                    description: test execution number
                    format: int32
                    type: integer
                  postRunScript:
                    description: script to run after test execution
                    type: string
                  preRunScript:
                    description: script to run before test execution
                    type: string
                  runningContext:
                    description: running context for test or test suite execution
                    properties:
                      context:
                        description: Context value depending from its type
                        type: string
                      type:
                        description: One of possible context types
                        enum:
                        - user-cli
                        - user-ui
                        - testsuite
                        - testtrigger
                        - scheduler
                        - testexecution
                        - testsuiteexecution
                        type: string
                    required:
                    - type
                    type: object
                  scraperTemplate:
                    description: scraper template extensions
                    type: string
                  secretEnvs:
                    additionalProperties:
                      type: string
                    description: 'Execution variables passed to executor from secrets.
                      Deprecated: use Secret Variables instead'
                    type: object
                  slavePodRequest:
                    description: pod request body
                    properties:
                      podTemplate:
                        description: pod template extensions
                        type: string
                      podTemplateReference:
                        description: name of the template resource
                        type: string
                      resources:
                        description: pod resources request specification
                        properties:
                          limits:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                          requests:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                        type: object
                    type: object
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  testSecretUUID:
                    description: test secret uuid
                    type: string
                  testSuiteName:
                    description: unique test suite name (CRD Test suite name), if
                      it's run as a part of test suite
                    type: string
                  testSuiteSecretUUID:
                    description: test suite secret uuid, if it's run as a part of
                      test suite
                    type: string
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                  variablesFile:
                    description: variables file content - need to be in format for
                      particular executor (e.g. postman envs file)
                    type: string
                type: object
              test:
                properties:
                  name:
                    description: object name
                    type: string
                  namespace:
                    description: object kubernetes namespace
                    type: string
                required:
                - name
                type: object
            required:
            - test
            type: object
          status:
            description: TestExecutionStatus defines the observed state of TestExecution
            properties:
              generation:
                description: test execution generation
                format: int64
                type: integer
              latestExecution:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  args:
                    description: additional arguments/flags passed to executor binary
                    items:
                      type: string
                    type: array
                  args_mode:
                    description: usage mode for arguments
                    enum:
                    - append
                    - override
                    type: string
                  artifactRequest:
                    description: artifact request body with test artifacts
                    properties:
                      dirs:
                        description: artifact directories for scraping
                        items:
                          type: string
                        type: array
                      masks:
                        description: regexp to filter scraped artifacts, single or
                          comma separated
                        items:
                          type: string
                        type: array
                      omitFolderPerExecution:
                        description: don't use a separate folder for execution artifacts
                        type: boolean
                      sharedBetweenPods:
                        description: whether to share volume between pods
                        type: boolean
                      storageBucket:
                        description: artifact bucket storage
                        type: string
                      storageClassName:
                        description: artifact storage class name for container executor
                        type: string
                      volumeMountPath:
                        description: artifact volume mount path for container executor
                        type: string
                    required:
                    - storageClassName
                    - volumeMountPath
                    type: object
                  bucketName:
                    description: minio bucket name to get uploads from
                    type: string
                  command:
                    description: executor image command
                    items:
                      type: string
                    type: array
                  containerShell:
                    description: shell used in container executor
                    type: string
                  content:
                    description: TestContent defines test content
                    properties:
                      data:
                        description: test content body
                        type: string
                      repository:
                        description: repository of test content
                        properties:
                          authType:
                            description: auth type for git requests
                            enum:
                            - basic
                            - header
                            type: string
                          branch:
                            description: branch/tag name for checkout
                            type: string
                          certificateSecret:
                            description: git auth certificate secret for private repositories
                            type: string
                          commit:
                            description: commit id (sha) for checkout
                            type: string
                          path:
                            description: if needed we can checkout particular path
                              (dir or file) in case of BIG/mono repositories
                            type: string
                          tokenSecret:
                            description: Testkube internal reference for secret storage
                              in Kubernetes secrets
                            properties:
                              key:
                                description: object key
                                type: string
                              name:
                                description: object name
                                type: string
                              namespace:
                                description: object kubernetes namespace
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: VCS repository type
                            type: string
                          uri:
                            description: uri of content file or git directory
                            type: string
                          usernameSecret:
                            description: Testkube internal reference for secret storage
                              in Kubernetes secrets
                            properties:
                              key:
                                description: object key
                                type: string
                              name:
                                description: object name
                                type: string
                              namespace:
                                description: object kubernetes namespace
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          workingDir:
                            description: if provided we checkout the whole repository
                              and run test from this directory
                            type: string
                        type: object
                      type:
                        description: test type
                        enum:
                        - string
                        - file-uri
                        - git-file
                        - git-dir
                        - git
                        type: string
                      uri:
                        description: uri of test content
                        type: string
                    type: object
                  duration:
                    description: test duration
                    type: string
                  durationMs:
                    description: test duration in milliseconds
                    format: int32
                    type: integer
                  endTime:
                    description: test end time
                    format: date-time
                    type: string
                  envs:
                    additionalProperties:
                      type: string
                    description: 'Environment variables passed to executor. Deprecated:
                      use Basic Variables instead'
                    type: object
                  executePostRunScriptBeforeScraping:
                    description: execute post run script before scraping (prebuilt
                      executor only)
                    type: boolean
                  executionResult:
                    description: execution result returned from executor
                    properties:
                      errorMessage:
                        description: error message when status is error, separate
                          to output as output can be partial in case of error
                        type: string
                      reports:
                        properties:
                          junit:
                            type: string
                        type: object
                      status:
                        enum:
                        - queued
                        - running
                        - passed
                        - failed
                        - aborted
                        - timeout
                        type: string
                      steps:
                        description: execution steps (for collection of requests)
                        items:
                          description: execution result data
                          properties:
                            assertionResults:
                              items:
                                description: execution result data
                                properties:
                                  errorMessage:
                                    type: string
                                  name:
                                    type: string
                                  status:
                                    type: string
                                type: object
                              type: array
                            duration:
                              type: string
                            name:
                              description: step name
                              type: string
                            status:
                              description: execution step status
                              type: string
                          required:
                          - name
                          - status
                          type: object
                        type: array
                    required:
                    - status
                    type: object
                  id:
                    description: execution id
                    type: string
                  isVariablesFileUploaded:
                    description: in case the variables file is too big, it will be
                      uploaded to storage
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: test and execution labels
                    type: object
                  name:
                    description: execution name
                    type: string
                  number:
                    description: execution number
                    format: int32
                    type: integer
                  postRunScript:
                    description: script to run after test execution
                    type: string
                  preRunScript:
                    description: script to run before test execution
                    type: string
                  runningContext:
                    description: running context for test or test suite execution
                    properties:
                      context:
                        description: Context value depending from its type
                        type: string
                      type:
                        description: One of possible context types
                        enum:
                        - user-cli
                        - user-ui
                        - testsuite
                        - testtrigger
                        - scheduler
                        - testexecution
                        - testsuiteexecution
                        type: string
                    required:
                    - type
                    type: object
                  slavePodRequest:
                    description: pod request body
                    properties:
                      podTemplate:
                        description: pod template extensions
                        type: string
                      podTemplateReference:
                        description: name of the template resource
                        type: string
                      resources:
                        description: pod resources request specification
                        properties:
                          limits:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                          requests:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                        type: object
                    type: object
                  startTime:
                    description: test start time
                    format: date-time
                    type: string
                  testName:
                    description: unique test name (CRD Test name)
                    type: string
                  testNamespace:
                    description: test namespace
                    type: string
                  testSecretUUID:
                    description: test secret uuid
                    type: string
                  testSuiteName:
                    description: unique test suite name (CRD Test suite name), if
                      it's run as a part of test suite
                    type: string
                  testSuiteSecretUUID:
                    description: test suite secret uuid, if it's run as a part of
                      test suite
                    type: string
                  testType:
                    description: test type e.g. postman/collection
                    type: string
                  uploads:
                    description: list of file paths that need to be copied into the
                      test from uploads
                    items:
                      type: string
                    type: array
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                  variablesFile:
                    description: variables file content - need to be in format for
                      particular executor (e.g. postman envs file)
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_tests.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: tests.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: Test
    listKind: TestList
    plural: tests
    singular: test
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Test is the Schema for the tests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSpec defines the desired state of Test
            properties:
              after:
                description: After steps is list of scripts which will be sequentially
                  orchestrated
                items:
                  description: TestStepSpec will of particular type will have config
                    for possible step types
                  properties:
                    delay:
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              before:
                description: Before steps is list of scripts which will be sequentially
                  orchestrated
                items:
                  description: TestStepSpec will of particular type will have config
                    for possible step types
                  properties:
                    delay:
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              description:
                type: string
              repeats:
                type: integer
              steps:
                description: Steps is list of scripts which will be sequentially orchestrated
                items:
                  description: TestStepSpec will of particular type will have config
                    for possible step types
                  properties:
                    delay:
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              tags:
                items:
                  type: string
                type: array
            type: object
          status:
            description: TestStatus defines the observed state of Test
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2
    schema:
      openAPIV3Schema:
        description: Test is the Schema for the tests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSpec defines the desired state of Test
            properties:
              content:
                description: test content object
                properties:
                  data:
                    description: test content body
                    type: string
                  repository:
                    description: repository of test content
                    properties:
                      branch:
                        description: branch/tag name for checkout
                        type: string
                      commit:
                        description: commit id (sha) for checkout
                        type: string
                      path:
                        description: if needed we can checkout particular path (dir
                          or file) in case of BIG/mono repositories
                        type: string
                      token:
                        description: git auth token for private repositories
                        type: string
                      type:
                        description: VCS repository type
                        type: string
                      uri:
                        description: uri of content file or git directory
                        type: string
                      username:
                        description: git auth username for private repositories
                        type: string
                    required:
                    - type
                    - uri
                    type: object
                  type:
                    description: test type
                    type: string
                  uri:
                    description: uri of test content
                    type: string
                type: object
              executorArgs:
                description: additional executor binary arguments
                items:
                  type: string
                type: array
              name:
                description: test execution custom name
                type: string
              params:
                additionalProperties:
                  type: string
                description: DEPRECATED execution params passed to executor
                type: object
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              type:
                description: test type
                type: string
              variables:
                additionalProperties:
                  properties:
                    name:
                      description: variable name
                      type: string
                    type:
                      description: variable type
                      type: string
                    value:
                      description: variable string value
                      type: string
                    valueFrom:
                      description: or load it from var source
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                description: Variables are new params with secrets attached
                type: object
            type: object
          status:
            description: TestStatus defines the observed state of Test
            properties:
              executions_count:
                type: integer
              last_execution:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v3
    schema:
      openAPIV3Schema:
        description: Test is the Schema for the tests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSpec defines the desired state of Test
            properties:
              content:
                description: test content object
                properties:
                  data:
                    description: test content body
                    type: string
                  repository:
                    description: repository of test content
                    properties:
                      authType:
                        description: auth type for git requests
                        enum:
                        - basic
                        - header
                        type: string
                      branch:
                        description: branch/tag name for checkout
                        type: string
                      certificateSecret:
                        description: git auth certificate secret for private repositories
                        type: string
                      commit:
                        description: commit id (sha) for checkout
                        type: string
                      path:
                        description: if needed we can checkout particular path (dir
                          or file) in case of BIG/mono repositories
                        type: string
                      tokenSecret:
                        description: SecretRef is the Testkube internal reference
                          for secret storage in Kubernetes secrets
                        properties:
                          key:
                            description: object key
                            type: string
                          name:
                            description: object name
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      type:
                        description: VCS repository type
                        type: string
                      uri:
                        description: uri of content file or git directory
                        type: string
                      usernameSecret:
                        description: SecretRef is the Testkube internal reference
                          for secret storage in Kubernetes secrets
                        properties:
                          key:
                            description: object key
                            type: string
                          name:
                            description: object name
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      workingDir:
                        description: if provided we checkout the whole repository
                          and run test from this directory
                        type: string
                    type: object
                  type:
                    description: test type
                    enum:
                    - string
                    - file-uri
                    - git-file
                    - git-dir
                    - git
                    type: string
                  uri:
                    description: uri of test content
                    type: string
                type: object
              description:
                description: test description
                type: string
              executionRequest:
                description: test execution request body
                properties:
                  activeDeadlineSeconds:
                    description: Optional duration in seconds the pod may be active
                      on the node relative to StartTime before the system will actively
                      try to mark it failed and kill associated containers. Value
                      must be a positive integer.
                    format: int64
                    type: integer
                  args:
                    description: additional executor binary arguments
                    items:
                      type: string
                    type: array
                  argsMode:
                    description: usage mode for arguments
                    enum:
                    - append
                    - override
                    type: string
                  artifactRequest:
                    description: artifact request body with test artifacts
                    properties:
                      dirs:
                        description: artifact directories for scraping
                        items:
                          type: string
                        type: array
                      masks:
                        description: regexp to filter scraped artifacts, single or
                          comma separated
                        items:
                          type: string
                        type: array
                      omitFolderPerExecution:
                        description: don't use a separate folder for execution artifacts
                        type: boolean
                      sharedBetweenPods:
                        description: whether to share volume between pods
                        type: boolean
                      storageBucket:
                        description: artifact bucket storage
                        type: string
                      storageClassName:
                        description: artifact storage class name for container executor
                        type: string
                      volumeMountPath:
                        description: artifact volume mount path for container executor
                        type: string
                    type: object
                  command:
                    description: executor binary command
                    items:
                      type: string
                    type: array
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  cronJobTemplateReference:
                    description: name of the template resource
                    type: string
                  envConfigMaps:
                    description: config map references
                    items:
                      description: Reference to env resource
                      properties:
                        mapToVariables:
                          description: whether we shoud map to variables from resource
                          type: boolean
                        mount:
                          description: whether we shoud mount resource
                          type: boolean
                        mountPath:
                          description: where we shoud mount resource
                          type: string
                        reference:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - reference
                      type: object
                    type: array
                  envSecrets:
                    description: secret references
                    items:
                      description: Reference to env resource
                      properties:
                        mapToVariables:
                          description: whether we shoud map to variables from resource
                          type: boolean
                        mount:
                          description: whether we shoud mount resource
                          type: boolean
                        mountPath:
                          description: where we shoud mount resource
                          type: string
                        reference:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - reference
                      type: object
                    type: array
                  envs:
                    additionalProperties:
                      type: string
                    description: 'Environment variables passed to executor. Deprecated:
                      use Basic Variables instead'
                    type: object
                  executePostRunScriptBeforeScraping:
                    description: execute post run script before scraping (prebuilt
                      executor only)
                    type: boolean
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: test execution labels
                    type: object
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  image:
                    description: container executor image
                    type: string
                  imagePullSecrets:
                    description: container executor image pull secrets
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  isVariablesFileUploaded:
                    type: boolean
                  jobTemplate:
                    description: job template extensions
                    type: string
                  jobTemplateReference:
                    description: name of the template resource
                    type: string
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  negativeTest:
                    description: negative test will fail the execution if it is a
                      success and it will succeed if it is a failure
                    type: boolean
                  number:
                    description: test execution number
                    format: int32
                    type: integer
                  postRunScript:
                    description: script to run after test execution
                    type: string
                  preRunScript:
                    description: script to run before test execution
                    type: string
                  pvcTemplate:
                    description: pvc template extensions
                    type: string
                  pvcTemplateReference:
                    description: name of the template resource
                    type: string
                  scraperTemplate:
                    description: scraper template extensions
                    type: string
                  scraperTemplateReference:
                    description: name of the template resource
                    type: string
                  secretEnvs:
                    additionalProperties:
                      type: string
                    description: 'Execution variables passed to executor from secrets.
                      Deprecated: use Secret Variables instead'
                    type: object
                  slavePodRequest:
                    description: pod request body
                    properties:
                      podTemplate:
                        description: pod template extensions
                        type: string
                      podTemplateReference:
                        description: name of the template resource
                        type: string
                      resources:
                        description: pod resources request specification
                        properties:
                          limits:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                          requests:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                        type: object
                    type: object
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  testSecretUUID:
                    description: test secret uuid
                    type: string
                  testSuiteName:
                    description: unique test suite name (CRD Test suite name), if
                      it's run as a part of test suite
                    type: string
                  testSuiteSecretUUID:
                    description: test suite secret uuid, if it's run as a part of
                      test suite
                    type: string
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                  variablesFile:
                    description: variables file content - need to be in format for
                      particular executor (e.g. postman envs file)
                    type: string
                type: object
              name:
                description: test name
                type: string
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              source:
                description: reference to test source resource
                type: string
              type:
                description: test type
                type: string
              uploads:
                description: files to be used from minio uploads
                items:
                  type: string
                type: array
            type: object
          status:
            description: TestStatus defines the observed state of Test
            properties:
              latestExecution:
                description: latest execution result
                properties:
                  endTime:
                    description: test end time
                    format: date-time
                    type: string
                  id:
                    description: execution id
                    type: string
                  number:
                    description: execution number
                    format: int32
                    type: integer
                  startTime:
                    description: test start time
                    format: date-time
                    type: string
                  status:
                    enum:
                    - queued
                    - running
                    - passed
                    - failed
                    - aborted
                    - timeout
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testsources.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testsources.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestSource
    listKind: TestSourceList
    plural: testsources
    singular: testsource
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestSource is the Schema for the testsources API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSourceSpec defines the desired state of TestSource
            properties:
              data:
                description: test content body
                type: string
              repository:
                description: repository of test content
                properties:
                  authType:
                    description: auth type for git requests
                    enum:
                    - basic
                    - header
                    type: string
                  branch:
                    description: branch/tag name for checkout
                    type: string
                  certificateSecret:
                    description: git auth certificate secret for private repositories
                    type: string
                  commit:
                    description: commit id (sha) for checkout
                    type: string
                  path:
                    description: If specified, does a sparse checkout of the repository
                      at the given path
                    type: string
                  tokenSecret:
                    description: SecretRef is the Testkube internal reference for
                      secret storage in Kubernetes secrets
                    properties:
                      key:
                        description: object key
                        type: string
                      name:
                        description: object name
                        type: string
                    required:
                    - key
                    - name
                    type: object
                  type:
                    description: VCS repository type
                    type: string
                  uri:
                    description: uri of content file or git directory
                    type: string
                  usernameSecret:
                    description: SecretRef is the Testkube internal reference for
                      secret storage in Kubernetes secrets
                    properties:
                      key:
                        description: object key
                        type: string
                      name:
                        description: object name
                        type: string
                    required:
                    - key
                    - name
                    type: object
                  workingDir:
                    description: if provided we checkout the whole repository and
                      run test from this directory
                    type: string
                required:
                - type
                - uri
                type: object
              type:
                enum:
                - string
                - file-uri
                - git-file
                - git-dir
                - git
                type: string
              uri:
                description: uri of test content
                type: string
            type: object
          status:
            description: TestSourceStatus defines the observed state of TestSource
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testsuiteexecutions.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testsuiteexecutions.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestSuiteExecution
    listKind: TestSuiteExecutionList
    plural: testsuiteexecutions
    singular: testsuiteexecution
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestSuiteExecution is the Schema for the testsuiteexecutions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSuiteExecutionSpec defines the desired state of TestSuiteExecution
            properties:
              executionRequest:
                description: test suite execution request body
                properties:
                  concurrencyLevel:
                    description: number of tests run in parallel
                    format: int32
                    type: integer
                  contentRequest:
                    description: test content request body
                    properties:
                      repository:
                        description: repository parameters for tests in git repositories
                        properties:
                          branch:
                            description: branch/tag name for checkout
                            type: string
                          commit:
                            description: commit id (sha) for checkout
                            type: string
                          path:
                            description: if needed we can checkout particular path
                              (dir or file) in case of BIG/mono repositories
                            type: string
                          workingDir:
                            description: if provided we checkout the whole repository
                              and run test from this directory
                            type: string
                        type: object
                    type: object
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: execution labels
                    type: object
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: test suite labels
                    type: object
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  number:
                    description: test suite execution number
                    format: int32
                    type: integer
                  runningContext:
                    description: running context for test or test suite execution
                    properties:
                      context:
                        description: Context value depending from its type
                        type: string
                      type:
                        description: One of possible context types
                        enum:
                        - user-cli
                        - user-ui
                        - testsuite
                        - testtrigger
                        - scheduler
                        - testexecution
                        - testsuiteexecution
                        type: string
                    required:
                    - type
                    type: object
                  secretUUID:
                    description: secret uuid
                    type: string
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  testSuiteExecutionName:
                    description: test suite execution name started the test suite
                      execution
                    type: string
                  timeout:
                    description: duration in seconds the test suite may be active,
                      until its stopped
                    format: int32
                    type: integer
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                type: object
              testSuite:
                properties:
                  name:
                    description: object name
                    type: string
                  namespace:
                    description: object kubernetes namespace
                    type: string
                required:
                - name
                type: object
            required:
            - testSuite
            type: object
          status:
            description: TestSuiteExecutionStatus defines the observed state of TestSuiteExecution
            properties:
              generation:
                description: test status execution generation
                format: int64
                type: integer
              latestExecution:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  duration:
                    description: test duration
                    type: string
                  durationMs:
                    description: test duration in ms
                    format: int32
                    type: integer
                  endTime:
                    description: test end time
                    format: date-time
                    type: string
                  envs:
                    additionalProperties:
                      type: string
                    description: 'Environment variables passed to executor. Deprecated:
                      use Basic Variables instead'
                    type: object
                  executeStepResults:
                    description: batch steps execution results
                    items:
                      description: execution result returned from executor
                      properties:
                        duration:
                          description: step duration
                          type: string
                        endTime:
                          description: step end time
                          format: date-time
                          type: string
                        execute:
                          items:
                            description: execution result returned from executor
                            properties:
                              execution:
                                description: test execution
                                properties:
                                  args:
                                    description: additional arguments/flags passed
                                      to executor binary
                                    items:
                                      type: string
                                    type: array
                                  args_mode:
                                    description: usage mode for arguments
                                    enum:
                                    - append
                                    - override
                                    type: string
                                  artifactRequest:
                                    description: artifact request body with test artifacts
                                    properties:
                                      dirs:
                                        description: artifact directories for scraping
                                        items:
                                          type: string
                                        type: array
                                      masks:
                                        description: regexp to filter scraped artifacts,
                                          single or comma separated
                                        items:
                                          type: string
                                        type: array
                                      omitFolderPerExecution:
                                        description: don't use a separate folder for
                                          execution artifacts
                                        type: boolean
                                      sharedBetweenPods:
                                        description: whether to share volume between
                                          pods
                                        type: boolean
                                      storageBucket:
                                        description: artifact bucket storage
                                        type: string
                                      storageClassName:
                                        description: artifact storage class name for
                                          container executor
                                        type: string
                                      volumeMountPath:
                                        description: artifact volume mount path for
                                          container executor
                                        type: string
                                    required:
                                    - storageClassName
                                    - volumeMountPath
                                    type: object
                                  bucketName:
                                    description: minio bucket name to get uploads
                                      from
                                    type: string
                                  command:
                                    description: executor image command
                                    items:
                                      type: string
                                    type: array
                                  containerShell:
                                    description: shell used in container executor
                                    type: string
                                  content:
                                    description: TestContent defines test content
                                    properties:
                                      data:
                                        description: test content body
                                        type: string
                                      repository:
                                        description: repository of test content
                                        properties:
                                          authType:
                                            description: auth type for git requests
                                            enum:
                                            - basic
                                            - header
                                            type: string
                                          branch:
                                            description: branch/tag name for checkout
                                            type: string
                                          certificateSecret:
                                            description: git auth certificate secret
                                              for private repositories
                                            type: string
                                          commit:
                                            description: commit id (sha) for checkout
                                            type: string
                                          path:
                                            description: if needed we can checkout
                                              particular path (dir or file) in case
                                              of BIG/mono repositories
                                            type: string
                                          tokenSecret:
                                            description: Testkube internal reference
                                              for secret storage in Kubernetes secrets
                                            properties:
                                              key:
                                                description: object key
                                                type: string
                                              name:
                                                description: object name
                                                type: string
                                              namespace:
                                                description: object kubernetes namespace
                                                type: string
                                            required:
                                            - key
                                            - name
                                            type: object
                                          type:
                                            description: VCS repository type
                                            type: string
                                          uri:
                                            description: uri of content file or git
                                              directory
                                            type: string
                                          usernameSecret:
                                            description: Testkube internal reference
                                              for secret storage in Kubernetes secrets
                                            properties:
                                              key:
                                                description: object key
                                                type: string
                                              name:
                                                description: object name
                                                type: string
                                              namespace:
                                                description: object kubernetes namespace
                                                type: string
                                            required:
                                            - key
                                            - name
                                            type: object
                                          workingDir:
                                            description: if provided we checkout the
                                              whole repository and run test from this
                                              directory
                                            type: string
                                        type: object
                                      type:
                                        description: test type
                                        enum:
                                        - string
                                        - file-uri
                                        - git-file
                                        - git-dir
                                        - git
                                        type: string
                                      uri:
                                        description: uri of test content
                                        type: string
                                    type: object
                                  duration:
                                    description: test duration
                                    type: string
                                  durationMs:
                                    description: test duration in milliseconds
                                    format: int32
                                    type: integer
                                  endTime:
                                    description: test end time
                                    format: date-time
                                    type: string
                                  envs:
                                    additionalProperties:
                                      type: string
                                    description: 'Environment variables passed to
                                      executor. Deprecated: use Basic Variables instead'
                                    type: object
                                  executePostRunScriptBeforeScraping:
                                    description: execute post run script before scraping
                                      (prebuilt executor only)
                                    type: boolean
                                  executionResult:
                                    description: execution result returned from executor
                                    properties:
                                      errorMessage:
                                        description: error message when status is
                                          error, separate to output as output can
                                          be partial in case of error
                                        type: string
                                      reports:
                                        properties:
                                          junit:
                                            type: string
                                        type: object
                                      status:
                                        enum:
                                        - queued
                                        - running
                                        - passed
                                        - failed
                                        - aborted
                                        - timeout
                                        type: string
                                      steps:
                                        description: execution steps (for collection
                                          of requests)
                                        items:
                                          description: execution result data
                                          properties:
                                            assertionResults:
                                              items:
                                                description: execution result data
                                                properties:
                                                  errorMessage:
                                                    type: string
                                                  name:
                                                    type: string
                                                  status:
                                                    type: string
                                                type: object
                                              type: array
                                            duration:
                                              type: string
                                            name:
                                              description: step name
                                              type: string
                                            status:
                                              description: execution step status
                                              type: string
                                          required:
                                          - name
                                          - status
                                          type: object
                                        type: array
                                    required:
                                    - status
                                    type: object
                                  id:
                                    description: execution id
                                    type: string
                                  isVariablesFileUploaded:
                                    description: in case the variables file is too
                                      big, it will be uploaded to storage
                                    type: boolean
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: test and execution labels
                                    type: object
                                  name:
                                    description: execution name
                                    type: string
                                  number:
                                    description: execution number
                                    format: int32
                                    type: integer
                                  postRunScript:
                                    description: script to run after test execution
                                    type: string
                                  preRunScript:
                                    description: script to run before test execution
                                    type: string
                                  runningContext:
                                    description: running context for test or test
                                      suite execution
                                    properties:
                                      context:
                                        description: Context value depending from
                                          its type
                                        type: string
                                      type:
                                        description: One of possible context types
                                        enum:
                                        - user-cli
                                        - user-ui
                                        - testsuite
                                        - testtrigger
                                        - scheduler
                                        - testexecution
                                        - testsuiteexecution
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  slavePodRequest:
                                    description: pod request body
                                    properties:
                                      podTemplate:
                                        description: pod template extensions
                                        type: string
                                      podTemplateReference:
                                        description: name of the template resource
                                        type: string
                                      resources:
                                        description: pod resources request specification
                                        properties:
                                          limits:
                                            description: resource request specification
                                            properties:
                                              cpu:
                                                description: requested cpu units
                                                type: string
                                              memory:
                                                description: requested memory units
                                                type: string
                                            type: object
                                          requests:
                                            description: resource request specification
                                            properties:
                                              cpu:
                                                description: requested cpu units
                                                type: string
                                              memory:
                                                description: requested memory units
                                                type: string
                                            type: object
                                        type: object
                                    type: object
                                  startTime:
                                    description: test start time
                                    format: date-time
                                    type: string
                                  testExecutionName:
                                    description: test execution name started the test
                                      execution
                                    type: string
                                  testName:
                                    description: unique test name (CRD Test name)
                                    type: string
                                  testNamespace:
                                    description: test namespace
                                    type: string
                                  testSecretUUID:
                                    description: test secret uuid
                                    type: string
                                  testSuiteName:
                                    description: unique test suite name (CRD Test
                                      suite name), if it's run as a part of test suite
                                    type: string
                                  testSuiteSecretUUID:
                                    description: test suite secret uuid, if it's run
                                      as a part of test suite
                                    type: string
                                  testType:
                                    description: test type e.g. postman/collection
                                    type: string
                                  uploads:
                                    description: list of file paths that need to be
                                      copied into the test from uploads
                                    items:
                                      type: string
                                    type: array
                                  variables:
                                    additionalProperties:
                                      properties:
                                        name:
                                          description: variable name
                                          type: string
                                        type:
                                          description: variable type
                                          type: string
                                        value:
                                          description: variable string value
                                          type: string
                                        valueFrom:
                                          description: or load it from var source
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    type: object
                                  variablesFile:
                                    description: variables file content - need to
                                      be in format for particular executor (e.g. postman
                                      envs file)
                                    type: string
                                type: object
                              step:
                                properties:
                                  delay:
                                    description: delay duration in time units
                                    type: string
                                  test:
                                    description: object name
                                    type: string
                                type: object
                              test:
                                properties:
                                  name:
                                    description: object name
                                    type: string
                                  namespace:
                                    description: object kubernetes namespace
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          type: array
                        startTime:
                          description: step start time
                          format: date-time
                          type: string
                        step:
                          description: set of steps run in parallel
                          properties:
                            execute:
                              items:
                                properties:
                                  delay:
                                    description: delay duration in time units
                                    type: string
                                  test:
                                    description: object name
                                    type: string
                                type: object
                              type: array
                            stopOnFailure:
                              type: boolean
                          required:
                          - stopOnFailure
                          type: object
                      type: object
                    type: array
                  id:
                    description: execution id
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: test suite labels
                    type: object
                  name:
                    description: execution name
                    type: string
                  runningContext:
                    description: running context for test or test suite execution
                    properties:
                      context:
                        description: Context value depending from its type
                        type: string
                      type:
                        description: One of possible context types
                        enum:
                        - user-cli
                        - user-ui
                        - testsuite
                        - testtrigger
                        - scheduler
                        - testexecution
                        - testsuiteexecution
                        type: string
                    required:
                    - type
                    type: object
                  secretUUID:
                    description: secret uuid
                    type: string
                  startTime:
                    description: test start time
                    format: date-time
                    type: string
                  status:
                    enum:
                    - queued
                    - running
                    - passed
                    - failed
                    - aborting
                    - aborted
                    - timeout
                    type: string
                  stepResults:
                    description: steps execution results
                    items:
                      description: execution result returned from executor
                      properties:
                        execution:
                          description: test execution
                          properties:
                            args:
                              description: additional arguments/flags passed to executor
                                binary
                              items:
                                type: string
                              type: array
                            args_mode:
                              description: usage mode for arguments
                              enum:
                              - append
                              - override
                              type: string
                            artifactRequest:
                              description: artifact request body with test artifacts
                              properties:
                                dirs:
                                  description: artifact directories for scraping
                                  items:
                                    type: string
                                  type: array
                                masks:
                                  description: regexp to filter scraped artifacts,
                                    single or comma separated
                                  items:
                                    type: string
                                  type: array
                                omitFolderPerExecution:
                                  description: don't use a separate folder for execution
                                    artifacts
                                  type: boolean
                                sharedBetweenPods:
                                  description: whether to share volume between pods
                                  type: boolean
                                storageBucket:
                                  description: artifact bucket storage
                                  type: string
                                storageClassName:
                                  description: artifact storage class name for container
                                    executor
                                  type: string
                                volumeMountPath:
                                  description: artifact volume mount path for container
                                    executor
                                  type: string
                              required:
                              - storageClassName
                              - volumeMountPath
                              type: object
                            bucketName:
                              description: minio bucket name to get uploads from
                              type: string
                            command:
                              description: executor image command
                              items:
                                type: string
                              type: array
                            containerShell:
                              description: shell used in container executor
                              type: string
                            content:
                              description: TestContent defines test content
                              properties:
                                data:
                                  description: test content body
                                  type: string
                                repository:
                                  description: repository of test content
                                  properties:
                                    authType:
                                      description: auth type for git requests
                                      enum:
                                      - basic
                                      - header
                                      type: string
                                    branch:
                                      description: branch/tag name for checkout
                                      type: string
                                    certificateSecret:
                                      description: git auth certificate secret for
                                        private repositories
                                      type: string
                                    commit:
                                      description: commit id (sha) for checkout
                                      type: string
                                    path:
                                      description: if needed we can checkout particular
                                        path (dir or file) in case of BIG/mono repositories
                                      type: string
                                    tokenSecret:
                                      description: Testkube internal reference for
                                        secret storage in Kubernetes secrets
                                      properties:
                                        key:
                                          description: object key
                                          type: string
                                        name:
                                          description: object name
                                          type: string
                                        namespace:
                                          description: object kubernetes namespace
                                          type: string
                                      required:
                                      - key
                                      - name
                                      type: object
                                    type:
                                      description: VCS repository type
                                      type: string
                                    uri:
                                      description: uri of content file or git directory
                                      type: string
                                    usernameSecret:
                                      description: Testkube internal reference for
                                        secret storage in Kubernetes secrets
                                      properties:
                                        key:
                                          description: object key
                                          type: string
                                        name:
                                          description: object name
                                          type: string
                                        namespace:
                                          description: object kubernetes namespace
                                          type: string
                                      required:
                                      - key
                                      - name
                                      type: object
                                    workingDir:
                                      description: if provided we checkout the whole
                                        repository and run test from this directory
                                      type: string
                                  type: object
                                type:
                                  description: test type
                                  enum:
                                  - string
                                  - file-uri
                                  - git-file
                                  - git-dir
                                  - git
                                  type: string
                                uri:
                                  description: uri of test content
                                  type: string
                              type: object
                            duration:
                              description: test duration
                              type: string
                            durationMs:
                              description: test duration in milliseconds
                              format: int32
                              type: integer
                            endTime:
                              description: test end time
                              format: date-time
                              type: string
                            envs:
                              additionalProperties:
                                type: string
                              description: 'Environment variables passed to executor.
                                Deprecated: use Basic Variables instead'
                              type: object
                            executePostRunScriptBeforeScraping:
                              description: execute post run script before scraping
                                (prebuilt executor only)
                              type: boolean
                            executionResult:
                              description: execution result returned from executor
                              properties:
                                errorMessage:
                                  description: error message when status is error,
                                    separate to output as output can be partial in
                                    case of error
                                  type: string
                                reports:
                                  properties:
                                    junit:
                                      type: string
                                  type: object
                                status:
                                  enum:
                                  - queued
                                  - running
                                  - passed
                                  - failed
                                  - aborted
                                  - timeout
                                  type: string
                                steps:
                                  description: execution steps (for collection of
                                    requests)
                                  items:
                                    description: execution result data
                                    properties:
                                      assertionResults:
                                        items:
                                          description: execution result data
                                          properties:
                                            errorMessage:
                                              type: string
                                            name:
                                              type: string
                                            status:
                                              type: string
                                          type: object
                                        type: array
                                      duration:
                                        type: string
                                      name:
                                        description: step name
                                        type: string
                                      status:
                                        description: execution step status
                                        type: string
                                    required:
                                    - name
                                    - status
                                    type: object
                                  type: array
                              required:
                              - status
                              type: object
                            id:
                              description: execution id
                              type: string
                            isVariablesFileUploaded:
                              description: in case the variables file is too big,
                                it will be uploaded to storage
                              type: boolean
                            labels:
                              additionalProperties:
                                type: string
                              description: test and execution labels
                              type: object
                            name:
                              description: execution name
                              type: string
                            number:
                              description: execution number
                              format: int32
                              type: integer
                            postRunScript:
                              description: script to run after test execution
                              type: string
                            preRunScript:
                              description: script to run before test execution
                              type: string
                            runningContext:
                              description: running context for test or test suite
                                execution
                              properties:
                                context:
                                  description: Context value depending from its type
                                  type: string
                                type:
                                  description: One of possible context types
                                  enum:
                                  - user-cli
                                  - user-ui
                                  - testsuite
                                  - testtrigger
                                  - scheduler
                                  - testexecution
                                  - testsuiteexecution
                                  type: string
                              required:
                              - type
                              type: object
                            slavePodRequest:
                              description: pod request body
                              properties:
                                podTemplate:
                                  description: pod template extensions
                                  type: string
                                podTemplateReference:
                                  description: name of the template resource
                                  type: string
                                resources:
                                  description: pod resources request specification
                                  properties:
                                    limits:
                                      description: resource request specification
                                      properties:
                                        cpu:
                                          description: requested cpu units
                                          type: string
                                        memory:
                                          description: requested memory units
                                          type: string
                                      type: object
                                    requests:
                                      description: resource request specification
                                      properties:
                                        cpu:
                                          description: requested cpu units
                                          type: string
                                        memory:
                                          description: requested memory units
                                          type: string
                                      type: object
                                  type: object
                              type: object
                            startTime:
                              description: test start time
                              format: date-time
                              type: string
                            testExecutionName:
                              description: test execution name started the test execution
                              type: string
                            testName:
                              description: unique test name (CRD Test name)
                              type: string
                            testNamespace:
                              description: test namespace
                              type: string
                            testSecretUUID:
                              description: test secret uuid
                              type: string
                            testSuiteName:
                              description: unique test suite name (CRD Test suite
                                name), if it's run as a part of test suite
                              type: string
                            testSuiteSecretUUID:
                              description: test suite secret uuid, if it's run as
                                a part of test suite
                              type: string
                            testType:
                              description: test type e.g. postman/collection
                              type: string
                            uploads:
                              description: list of file paths that need to be copied
                                into the test from uploads
                              items:
                                type: string
                              type: array
                            variables:
                              additionalProperties:
                                properties:
                                  name:
                                    description: variable name
                                    type: string
                                  type:
                                    description: variable type
                                    type: string
                                  value:
                                    description: variable string value
                                    type: string
                                  valueFrom:
                                    description: or load it from var source
                                    properties:
                                      configMapKeyRef:
                                        description: Selects a key of a ConfigMap.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      fieldRef:
                                        description: 'Selects a field of the pod:
                                          supports metadata.name, metadata.namespace,
                                          `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                          spec.nodeName, spec.serviceAccountName,
                                          status.hostIP, status.podIP, status.podIPs.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the
                                              FieldPath is written in terms of, defaults
                                              to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select
                                              in the specified API version.
                                            type: string
                                        required:
                                        - fieldPath
                                        type: object
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container:
                                          only resources limits and requests (limits.cpu,
                                          limits.memory, limits.ephemeral-storage,
                                          requests.cpu, requests.memory and requests.ephemeral-storage)
                                          are currently supported.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required
                                              for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Specifies the output format
                                              of the exposed resources, defaults to
                                              "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                        - resource
                                        type: object
                                      secretKeyRef:
                                        description: Selects a key of a secret in
                                          the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                type: object
                              type: object
                            variablesFile:
                              description: variables file content - need to be in
                                format for particular executor (e.g. postman envs
                                file)
                              type: string
                          type: object
                        step:
                          properties:
                            delay:
                              properties:
                                duration:
                                  description: delay duration in milliseconds
                                  format: int32
                                  type: integer
                              required:
                              - duration
                              type: object
                            execute:
                              properties:
                                name:
                                  description: object name
                                  type: string
                                namespace:
                                  description: object kubernetes namespace
                                  type: string
                              required:
                              - name
                              type: object
                            stopTestOnFailure:
                              type: boolean
                          required:
                          - stopTestOnFailure
                          type: object
                        test:
                          properties:
                            name:
                              description: object name
                              type: string
                            namespace:
                              description: object kubernetes namespace
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    type: array
                  testSuite:
                    properties:
                      name:
                        description: object name
                        type: string
                      namespace:
                        description: object kubernetes namespace
                        type: string
                    required:
                    - name
                    type: object
                  testSuiteExecutionName:
                    description: test suite execution name started the test suite
                      execution
                    type: string
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                required:
                - id
                - name
                - testSuite
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testsuites.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testsuites.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestSuite
    listKind: TestSuiteList
    plural: testsuites
    singular: testsuite
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestSuite is the Schema for the testsuites API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSuiteSpec defines the desired state of TestSuite
            properties:
              after:
                description: After steps is list of tests which will be sequentially
                  orchestrated
                items:
                  description: TestSuiteStepSpec will of particular type will have
                    config for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              before:
                description: Before steps is list of tests which will be sequentially
                  orchestrated
                items:
                  description: TestSuiteStepSpec will of particular type will have
                    config for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              description:
                type: string
              params:
                additionalProperties:
                  type: string
                description: DEPRECATED execution params passed to executor
                type: object
              repeats:
                type: integer
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              steps:
                description: Steps is list of tests which will be sequentially orchestrated
                items:
                  description: TestSuiteStepSpec will of particular type will have
                    config for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              variables:
                additionalProperties:
                  properties:
                    name:
                      description: variable name
                      type: string
                    type:
                      description: variable type
                      type: string
                    value:
                      description: variable string value
                      type: string
                    valueFrom:
                      description: or load it from var source
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                description: Variables are new params with secrets attached
                type: object
            type: object
          status:
            description: TestSuiteStatus defines the observed state of TestSuite
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2
    schema:
      openAPIV3Schema:
        description: TestSuite is the Schema for the testsuites API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSuiteSpec defines the desired state of TestSuite
            properties:
              after:
                description: After steps is list of tests which will be sequentially
                  orchestrated
                items:
                  description: TestSuiteStepSpec for particular type will have config
                    for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      description: TestSuiteStepType defines different type of test
                        suite steps
                      enum:
                      - execute
                      - delay
                      type: string
                  type: object
                type: array
              before:
                description: Before steps is list of tests which will be sequentially
                  orchestrated
                items:
                  description: TestSuiteStepSpec for particular type will have config
                    for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      description: TestSuiteStepType defines different type of test
                        suite steps
                      enum:
                      - execute
                      - delay
                      type: string
                  type: object
                type: array
              description:
                type: string
              executionRequest:
                description: TestSuiteExecutionRequest defines the execution request
                  body
                properties:
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: execution labels
                    type: object
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: test suite labels
                    type: object
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  secretUUID:
                    description: secret uuid
                    type: string
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  timeout:
                    description: timeout for test suite execution
                    format: int32
                    type: integer
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                type: object
              repeats:
                type: integer
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              steps:
                description: Steps is list of tests which will be sequentially orchestrated
                items:
                  description: TestSuiteStepSpec for particular type will have config
                    for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      description: TestSuiteStepType defines different type of test
                        suite steps
                      enum:
                      - execute
                      - delay
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: TestSuiteStatus defines the observed state of TestSuite
            properties:
              latestExecution:
                description: latest execution result
                properties:
                  endTime:
                    description: test suite execution end time
                    format: date-time
                    type: string
                  id:
                    description: execution id
                    type: string
                  startTime:
                    description: test suite execution start time
                    format: date-time
                    type: string
                  status:
                    enum:
                    - queued
                    - running
                    - passed
                    - failed
                    - aborting
                    - aborted
                    - timeout
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v3
    schema:
      openAPIV3Schema:
        description: TestSuite is the Schema for the testsuites API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSuiteSpec defines the desired state of TestSuite
            properties:
              after:
                description: After batch steps is list of batch tests which will be
                  sequentially orchestrated for parallel tests in each batch
                items:
                  description: TestSuiteBatchStep is set of steps run in parallel
                  properties:
                    downloadArtifacts:
                      description: options to download artifacts from previous steps
                      properties:
                        allPreviousSteps:
                          type: boolean
                        previousStepNumbers:
                          description: previous step numbers starting from 1
                          items:
                            format: int32
                            type: integer
                          type: array
                        previousTestNames:
                          description: previous test names
                          items:
                            type: string
                          type: array
                      type: object
                    execute:
                      items:
                        description: TestSuiteStepSpec for particular type will have
                          config for possible step types
                        properties:
                          delay:
                            description: delay duration in time units
                            format: duration
                            type: string
                          test:
                            description: object name
                            type: string
                        type: object
                      type: array
                    stopOnFailure:
                      type: boolean
                  required:
                  - stopOnFailure
                  type: object
                type: array
              before:
                description: Before batch steps is list of batch tests which will
                  be sequentially orchestrated for parallel tests in each batch
                items:
                  description: TestSuiteBatchStep is set of steps run in parallel
                  properties:
                    downloadArtifacts:
                      description: options to download artifacts from previous steps
                      properties:
                        allPreviousSteps:
                          type: boolean
                        previousStepNumbers:
                          description: previous step numbers starting from 1
                          items:
                            format: int32
                            type: integer
                          type: array
                        previousTestNames:
                          description: previous test names
                          items:
                            type: string
                          type: array
                      type: object
                    execute:
                      items:
                        description: TestSuiteStepSpec for particular type will have
                          config for possible step types
                        properties:
                          delay:
                            description: delay duration in time units
                            format: duration
                            type: string
                          test:
                            description: object name
                            type: string
                        type: object
                      type: array
                    stopOnFailure:
                      type: boolean
                  required:
                  - stopOnFailure
                  type: object
                type: array
              description:
                type: string
              executionRequest:
                description: test suite execution request body
                properties:
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  cronJobTemplateReference:
                    description: name of the template resource
                    type: string
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: execution labels
                    type: object
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  jobTemplate:
                    description: job template extensions
                    type: string
                  jobTemplateReference:
                    description: name of the template resource
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: test suite labels
                    type: object
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  pvcTemplate:
                    description: pvc template extensions
                    type: string
                  pvcTemplateReference:
                    description: name of the template resource
                    type: string
                  scraperTemplate:
                    description: scraper template extensions
                    type: string
                  scraperTemplateReference:
                    description: name of the template resource
                    type: string
                  secretUUID:
                    description: secret uuid
                    type: string
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  timeout:
                    description: timeout for test suite execution
                    format: int32
                    type: integer
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                type: object
              repeats:
                type: integer
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              steps:
                description: Batch steps is list of batch tests which will be sequentially
                  orchestrated for parallel tests in each batch
                items:
                  description: TestSuiteBatchStep is set of steps run in parallel
                  properties:
                    downloadArtifacts:
                      description: options to download artifacts from previous steps
                      properties:
                        allPreviousSteps:
                          type: boolean
                        previousStepNumbers:
                          description: previous step numbers starting from 1
                          items:
                            format: int32
                            type: integer
                          type: array
                        previousTestNames:
                          description: previous test names
                          items:
                            type: string
                          type: array
                      type: object
                    execute:
                      items:
                        description: TestSuiteStepSpec for particular type will have
                          config for possible step types
                        properties:
                          delay:
                            description: delay duration in time units
                            format: duration
                            type: string
                          test:
                            description: object name
                            type: string
                        type: object
                      type: array
                    stopOnFailure:
                      type: boolean
                  required:
                  - stopOnFailure
                  type: object
                type: array
            type: object
          status:
            description: TestSuiteStatus defines the observed state of TestSuite
            properties:
              latestExecution:
                description: latest execution result
                properties:
                  endTime:
                    description: test suite execution end time
                    format: date-time
                    type: string
                  id:
                    description: execution id
                    type: string
                  startTime:
                    description: test suite execution start time
                    format: date-time
                    type: string
                  status:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testtriggers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testtriggers.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestTrigger
    listKind: TestTriggerList
    plural: testtriggers
    singular: testtrigger
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.resource
      name: Resource
      type: string
    - jsonPath: .spec.event
      name: Event
      type: string
    - jsonPath: .spec.execution
      name: Execution
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: TestTrigger is the Schema for the testtriggers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestTriggerSpec defines the desired state of TestTrigger
            properties:
              action:
                description: Action represents what needs to be executed for selected
                  Execution
                enum:
                - run
                type: string
              concurrencyPolicy:
                description: ConcurrencyPolicy defines concurrency policy for selected
                  Execution
                enum:
                - allow
                - forbid
                - replace
                type: string
              conditionSpec:
                description: What resource conditions should be matched
                properties:
                  conditions:
                    description: list of test trigger conditions
                    items:
                      description: TestTriggerCondition is used for definition of
                        the condition for test triggers
                      properties:
                        reason:
                          description: test trigger condition reason
                          type: string
                        status:
                          description: TestTriggerConditionStatuses defines condition
                            statuses for test triggers
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        ttl:
                          description: duration in seconds in the past from current
                            time when the condition is still valid
                          format: int32
                          type: integer
                        type:
                          description: test trigger condition
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  delay:
                    description: duration in seconds the test trigger waits between
                      condition check
                    format: int32
                    type: integer
                  timeout:
                    description: duration in seconds the test trigger waits for conditions,
                      until its stopped
                    format: int32
                    type: integer
                type: object
              delay:
                description: Delay is a duration string which specifies how long should
                  the test be delayed after a trigger is matched
                format: duration
                type: string
              event:
                description: On which Event for a Resource should an Action be triggered
                enum:
                - created
                - modified
                - deleted
                - deployment-scale-update
                - deployment-image-update
                - deployment-env-update
                - deployment-containers-modified
                type: string
              execution:
                description: Execution identifies for which test execution should
                  an Action be executed
                enum:
                - test
                - testsuite
                type: string
              probeSpec:
                description: What resource probes should be matched
                properties:
                  delay:
                    description: duration in seconds the test trigger waits between
                      probes
                    format: int32
                    type: integer
                  probes:
                    description: list of test trigger probes
                    items:
                      description: TestTriggerProbe is used for definition of the
                        probe for test triggers
                      properties:
                        headers:
                          additionalProperties:
                            type: string
                          description: test trigger condition probe headers to submit
                          type: object
                        host:
                          description: test trigger condition probe host, default
                            is pod ip or service name
                          type: string
                        path:
                          description: test trigger condition probe path to check,
                            default is /
                          type: string
                        port:
                          description: test trigger condition probe port to connect
                          format: int32
                          type: integer
                        scheme:
                          description: test trigger condition probe scheme to connect
                            to host, default is http
                          type: string
                      type: object
                    type: array
                  timeout:
                    description: duration in seconds the test trigger waits for probes,
                      until its stopped
                    format: int32
                    type: integer
                type: object
              resource:
                description: For which Resource do we monitor Event which triggers
                  an Action on certain conditions
                enum:
                - pod
                - deployment
                - statefulset
                - daemonset
                - service
                - ingress
                - event
                - configmap
                type: string
              resourceSelector:
                description: ResourceSelector identifies which Kubernetes Objects
                  should be watched
                properties:
                  labelSelector:
                    description: LabelSelector is used to identify a group of Kubernetes
                      Objects based on their metadata labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  name:
                    description: Name selector is used to identify a Kubernetes Object
                      based on the metadata name
                    type: string
                  nameRegex:
                    description: kubernetes resource name regex
                    type: string
                  namespace:
                    description: Namespace of the Kubernetes object
                    type: string
                type: object
              testSelector:
                description: TestSelector identifies on which Testkube Kubernetes
                  Objects an Action should be taken
                properties:
                  labelSelector:
                    description: LabelSelector is used to identify a group of Kubernetes
                      Objects based on their metadata labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  name:
                    description: Name selector is used to identify a Kubernetes Object
                      based on the metadata name
                    type: string
                  nameRegex:
                    description: kubernetes resource name regex
                    type: string
                  namespace:
                    description: Namespace of the Kubernetes object
                    type: string
                type: object
            required:
            - action
            - event
            - execution
            - resource
            - resourceSelector
            - testSelector
            type: object
          status:
            description: TestTriggerStatus defines the observed state of TestTrigger
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: watchers-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - events
      - namespaces
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "networking.k8s.io"
      - "extensions"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: testkube-values-operator-manager-role
  labels:
  namespace: testkube
rules:
- apiGroups:
  - executor.testkube.io
  resources:
  - executors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - executor.testkube.io
  resources:
  - executors/finalizers
  verbs:
  - update
- apiGroups:
  - executor.testkube.io
  resources:
  - executors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - scripts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - scripts/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - scripts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - tests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - tests/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - tests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuites
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuites/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuites/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - executor.testkube.io
  resources:
  - webhooks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - executor.testkube.io
  resources:
  - webhooks/finalizers
  verbs:
  - update
- apiGroups:
  - executor.testkube.io
  resources:
  - webhooks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testsources/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testtriggers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testtriggers/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testtriggers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testexecutions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testexecutions/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testexecutions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuiteexecutions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuiteexecutions/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuiteexecutions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - templates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - templates/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - templates/status
  verbs:
  - get
  - patch
  - update
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: testkube-values-operator-metrics-reader
  labels:
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: testkube-values-operator-proxy-role
  labels:
  namespace: testkube
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: testkube-values-operator-leader-election-role
  labels:
  namespace: testkube
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: testkube-values-cronjobs-role
  labels:
  namespace: testkube
rules:
- apiGroups:
  - ""
  - "batch"
  resources:
  - cronjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
  - deletecollection
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: watchers-rb-testkube-values
  namespace: testkube
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  watchers-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: testkube-values-operator-manager-rolebinding
  labels:
  namespace: testkube
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: testkube-values-operator-manager-role
subjects:
- kind: ServiceAccount
  name: testkube-operator-controller-manager
  namespace: testkube
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: testkube-values-operator-proxy-rolebinding
  labels:
  namespace: testkube
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: testkube-values-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: testkube-operator-controller-manager
  namespace: testkube
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: testkube-values-operator-leader-election-rolebinding
  labels:
  namespace: testkube
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: testkube-values-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: testkube-operator-controller-manager
  namespace: testkube
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: testkube-values-cronjobs-rolebinding
  labels:
  namespace: testkube
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: testkube-values-cronjobs-role
subjects:
- kind: ServiceAccount
  name: testkube-operator-controller-manager
  namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: executors-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - executor.testkube.io
    resources:
      - executors
    verbs:
      - get
      - watch
      - list
      - create
      - update
      - patch
      - delete
      - deletecollection
  - apiGroups:
      - executor.testkube.io
    resources:
      - executors/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jobs-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
    - batch
    resources:
      - jobs
    verbs:
      - get
      - watch
      - list
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - get
      - watch
      - list
      - create
      - delete
---
# Source: testkube/charts/testkube-api/templates/role.yaml
# permissions for end users to edit tests.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: script-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - scripts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - scripts/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: test-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - tests
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - tests/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secrets-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testsuite-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsuites
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsuites/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: webhook-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - executor.testkube.io
    resources:
      - webhooks
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - executor.testkube.io
    resources:
      - webhooks/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configmaps-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testsource-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsources
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsources/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testtriggers-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testtriggers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testtriggers/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: persistentvolumeclaims-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - create
      - get
      - delete
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testexecution-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testexecutions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testexecutions/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testsuiteexecution-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsuiteexecutions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsuiteexecutions/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: template-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - templates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - templates/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tests-job-role-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - watch
      - list
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - get
      - watch
      - list
      - create
      - delete
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: executors-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: executors-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jobs-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jobs-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scripts-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: script-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tests-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: test-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secrets-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secrets-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testsuites-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testsuite-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: webhooks-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: webhook-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: configmaps-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: configmaps-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testsources-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testsource-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tests-job-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tests-job-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server-tests-job
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testtriggers-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testtriggers-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: persistentvolumeclaims-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: persistentvolumeclaims-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testexecutions-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testexecution-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testsuiteexecutions-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testsuiteexecution-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: templates-crb-testkube-values
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: template-role-testkube-values
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: testkube
---
# Source: testkube/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: testkube-mongodb
  namespace: "testkube"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: "mongodb"
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/component: mongodb
---
# Source: testkube/charts/nats/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: testkube-values-nats-headless
spec:
  clusterIP: None
  ports:
  - appProtocol: tcp
    name: nats
    port: 4222
    targetPort: nats
  - appProtocol: http
    name: monitor
    port: 8222
    targetPort: monitor
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/name: nats
---
# Source: testkube/charts/nats/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: testkube-values-nats
spec:
  ports:
  - appProtocol: tcp
    name: nats
    port: 4222
    targetPort: nats
  selector:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/name: nats
---
# Source: testkube/charts/testkube-api/templates/minio.yaml
apiVersion: v1
kind: Service
metadata:
  # This name uniquely identifies the service
  name: testkube-minio-service-testkube
  labels:
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9000
      protocol: TCP
    - name: web
      port: 9090
      protocol: TCP
    - name: https
      port: 9443
      protocol: TCP
  selector:
    # Looks for labels `app:minio` in the namespace and applies the spec
    app: testkube-minio-testkube
---
# Source: testkube/charts/testkube-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: testkube-api-server
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
spec:
  type: ClusterIP
  ports:
    - port: 8088
      targetPort: 8088
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
---
# Source: testkube/charts/testkube-dashboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: testkube-dashboard
  labels:
    app.kubernetes.io/version: "1.16.5"
    helm.sh/chart: testkube-dashboard-1.16.5
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/instance: testkube-values
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/instance: testkube-values
---
# Source: testkube/charts/testkube-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: testkube-operator-controller-manager-metrics-service
  labels:
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: testkube-values
  namespace: testkube
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
# Source: testkube/charts/testkube-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: testkube-operator-webhook-service
  labels:
  namespace: testkube
spec:
  type: ClusterIP
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
# Source: testkube/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testkube-mongodb
  namespace: "testkube"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: testkube-values
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-13.10.1
        app.kubernetes.io/instance: testkube-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: testkube-mongodb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb
                    app.kubernetes.io/instance: testkube-values
                    app.kubernetes.io/component: mongodb
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
      securityContext:
        fsGroup: 1001
        sysctls: []
      
      containers:
        - name: mongodb
          image: docker.io/zcube/bitnami-compat-mongodb:6.0.5-debian-11-r64
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_PORT_NUMBER
              value: "27017"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
            exec:
              command:
                - /bitnami/scripts/ping-mongodb.sh
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bitnami/scripts/readiness-probe.sh
          resources:
            limits: {}
            requests:
              cpu: 150m
              memory: 100Mi
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
            - name: common-scripts
              mountPath: /bitnami/scripts
      volumes:
        - name: common-scripts
          configMap:
            name: testkube-mongodb-common-scripts
            defaultMode: 0550
        - name: datadir
          persistentVolumeClaim:
            claimName: testkube-mongodb
---
# Source: testkube/charts/nats/templates/nats-box/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: nats-box
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: testkube-values-nats-box
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nats-box
      app.kubernetes.io/instance: testkube-values
      app.kubernetes.io/name: nats
  template:
    metadata:
      labels:
        app.kubernetes.io/component: nats-box
        app.kubernetes.io/instance: testkube-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nats
        app.kubernetes.io/version: 2.10.9
        helm.sh/chart: nats-1.1.7
    spec:
      containers:
      - args:
        - trap true INT TERM; sleep infinity & wait
        command:
        - sh
        - -ec
        - |
          work_dir="$(pwd)"
          mkdir -p "$XDG_CONFIG_HOME/nats"
          cd "$XDG_CONFIG_HOME/nats"
          if ! [ -s context ]; then
            ln -s /etc/nats-contexts context
          fi
          if ! [ -f context.txt ]; then
            echo -n "default" > context.txt
          fi
          cd "$work_dir"
          exec sh -ec "$0"
        image: natsio/nats-box:0.14.1
        name: nats-box
        volumeMounts:
        - mountPath: /etc/nats-contexts
          name: contexts
      enableServiceLinks: false
      tolerations:
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: arm64
      volumes:
      - name: contexts
        secret:
          secretName: testkube-values-nats-box-contexts
---
# Source: testkube/charts/testkube-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testkube-api-server
  labels:
    app.kubernetes.io/version: "1.16.27"
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: testkube-values
  annotations:
    checksum/config: d70012a76e1b40e04a4d71bbdcdaaaf24f1154222f4442fc7ae664497daa5f51
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api-server
      app.kubernetes.io/instance: testkube-values
  template:
    metadata:
      annotations:
        checksum/config: d70012a76e1b40e04a4d71bbdcdaaaf24f1154222f4442fc7ae664497daa5f51
      labels:
        app.kubernetes.io/name: api-server
        app.kubernetes.io/instance: testkube-values
    spec:
      
      serviceAccountName: testkube-api-server
      containers:
        - name: testkube-api
          env:
            - name: APISERVER_PORT
              value: "8088"
            - name: API_MONGO_DSN
              value: "mongodb://testkube-mongodb:27017"
            - name: API_MONGO_ALLOW_DISK_USE
              value: "true"
            - name: NATS_URI
              value: "nats://testkube-values-nats"
            - name: "NATS_SECURE"
              value: "false"
            - name: POSTMANEXECUTOR_URI
              value: ""
            - name: TESTKUBE_ANALYTICS_ENABLED
              value: "true"
            - name: SLACK_TOKEN
              value: ""
            - name: "STORAGE_ENDPOINT"
              value:  "testkube-minio-service-testkube:9000"
            - name: "STORAGE_BUCKET"
              value:  "testkube-artifacts"
            - name: "STORAGE_EXPIRATION"
              value:  "0"
            - name: "STORAGE_ACCESSKEYID"
              value: "minio"
            - name: "STORAGE_SECRETACCESSKEY"
              value: "minio123"
            - name: "STORAGE_REGION"
              value: ""
            - name: "STORAGE_TOKEN"
              value: ""
            - name: "STORAGE_SSL"
              value:  "false"
            - name: "STORAGE_SKIP_VERIFY"
              value:  "false"
            - name: "SCRAPPERENABLED"
              value:  "true"
            - name: "COMPRESSARTIFACTS"
              value:  "true"
            - name: "LOGS_BUCKET"
              value:  "testkube-logs"
            - name: "LOGS_STORAGE"
              value:  "minio"
            - name: TESTKUBE_NAMESPACE
              value: "testkube"
            - name: JOB_SERVICE_ACCOUNT_NAME
              value: testkube-api-server-tests-job
            - name: APISERVER_FULLNAME
              value: "testkube-api-server"
            - name: APISERVER_CONFIG
              value: "testkube-api-server-config-testkube"
            - name: APISERVER_HTTP_READBUFFERSIZE
              value: "8192"
            - name: TESTKUBE_OAUTH_CLIENTID
              value:  ""
            - name: TESTKUBE_OAUTH_CLIENTSECRET
              value:  ""
            - name: TESTKUBE_OAUTH_PROVIDER
              value:  "github"
            - name: TESTKUBE_OAUTH_SCOPES
              value:  ""
            - name: TESTKUBE_CLOUD_URL
              value:  "agent.testkube.io:443"
            - name: TESTKUBE_WATCHER_NAMESPACES
              value: ""
            - name: TESTKUBE_CONFIG_DIR
              value: /app/config
            - name: TESTKUBE_REGISTRY
              value:  
            - name: TESTKUBE_POD_START_TIMEOUT
              value:  "30m"
            - name: CDEVENTS_TARGET
              value: ""
            - name: TESTKUBE_DASHBOARD_URI
              value: ""
            - name: TESTKUBE_CLUSTER_NAME
              value: ""
            - name: TESTKUBE_HELMCHART_VERSION
              valueFrom:
                configMapKeyRef:
                  name: testkube-global-config
                  key: helmchartVersion
            - name: ENABLE_SECRETS_ENDPOINT
              value: "false"
            - name: DISABLE_MONGO_MIGRATIONS
              value: "false"
          image: docker.io/kubeshop/testkube-api-server:1.16.27
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8088
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 15
            httpGet:
              path: /health
              port: 8088
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /health
              port: 8088
              scheme: HTTP
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
            - mountPath: /app/config
              name: testkube-config
          securityContext:
            {}
      securityContext:
        {}
      volumes:
        - name: testkube-config
          configMap:
            name: testkube-api-server
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/charts/testkube-api/templates/minio.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: testkube-minio-testkube
  labels:
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testkube-minio-testkube # has to match .spec.template.metadata.labels
  strategy:
    # Specifies the strategy used to replace old Pods by new ones
    # Refer: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    type: Recreate
  template:
    metadata:
      labels:
      # This label is used as a selector in Service definition
        app: testkube-minio-testkube
    spec:
      
      # Volumes used by this deployment
      volumes:
        - name: data
          # This volume is based on PVC
          persistentVolumeClaim:
            # Name of the PVC created earlier
            claimName: testkube-minio-pv-claim-testkube
      containers:
        - name: testkube-minio
          # Volume mounts for this container
          volumeMounts:
            # Volume 'data' is mounted to path '/data'
            - name: data
              mountPath: "/data"
          # Pulls the lastest Minio image from Docker Hub
          image: docker.io/minio/minio:RELEASE.2023-09-16T01-01-47Z
          imagePullPolicy: IfNotPresent
          args:
            - server
            - /data
            - --console-address
            - ":9090"
          env:
            # MinIO access key and secret key
            - name: MINIO_ROOT_USER
              value: minio
            - name: MINIO_ROOT_PASSWORD
              value: minio123
            - name: CONSOLE_PORT
              value: "9090"
            - name: CONSOLE_TLS_PORT
              value: "9443"
          ports:
            - containerPort: 9000
              name: http
            - containerPort: 9090
              name: web
            - containerPort: 9443
              name: https
          # Readiness probe detects situations when MinIO server instance
          # is not ready to accept traffic. Kubernetes doesn't forward
          # traffic to the pod while readiness checks fail.
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 3
            periodSeconds: 10
          # Liveness probe detects situations where MinIO server instance
          # is not working properly and needs restart. Kubernetes automatically
          # restarts the pods if liveness checks fail.
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 3
            periodSeconds: 10
          securityContext:
            {}
      securityContext:
        {}
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/charts/testkube-dashboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testkube-dashboard
  labels:
    app.kubernetes.io/version: "1.16.5"
    helm.sh/chart: testkube-dashboard-1.16.5
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/instance: testkube-values
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dashboard
      app.kubernetes.io/instance: testkube-values
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dashboard
        app.kubernetes.io/instance: testkube-values
    spec:
      
      serviceAccountName: testkube-dashboard
      securityContext:
        {}
      containers:
        - name: testkube-dashboard
          env:
          - name: REACT_APP_API_SERVER_ENDPOINT
            value: ""
          - name: REACT_APP_ROOT_ROUTE
            value: "/"
          - name: REACT_APP_DISABLE_TELEMETRY
            value: "false"
          - name: REACT_APP_CRD_OPERATOR_REVISION
            value: "main"
          - name: ENABLE_IPV6
            value: "false"
          securityContext:
            {}
          image: docker.io/kubeshop/testkube-dashboard:1.16.5
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/charts/testkube-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testkube-operator-controller-manager
  namespace: testkube
  labels:
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      
      containers:
      - name: kube-rbac-proxy
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9443
          name: https
        securityContext:
          readOnlyRootFilesystem: true
      - name: manager
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: docker.io/kubeshop/testkube-operator:1.16.25
        imagePullPolicy: 
        env:
        - name: APISERVER_FULLNAME
          value: "testkube-api-server"
        - name: APISERVER_PORT
          value: "8088"
        - name: APISERVER_TEMPLATE_CRONJOB
          value: "YXBpVmVyc2lvbjogYmF0Y2gvdjEKa2luZDogQ3JvbkpvYgptZXRhZGF0YToKICBuYW1lOiAie3sgLk5hbWUgfX0iCiAgbmFtZXNwYWNlOiB7eyAuTmFtZXNwYWNlIH19CiAgbGFiZWxzOgogICAgdGVzdGt1YmU6IHt7IC5SZXNvdXJjZVVSSSB9fQp7ey0gaWYgLkFyZ29DRFN5bmMgfX0KICBvd25lclJlZmVyZW5jZXM6CiAgLSBhcGlWZXJzaW9uOiB0ZXN0cy50ZXN0a3ViZS5pby97eyAuVmVyc2lvbiB9fQogICAga2luZDoge3sgLlJlc291cmNlIH19CiAgICBuYW1lOiB7eyAuSWQgfX0KICAgIHVpZDoge3sgLlVJRCB9fQp7ey0gZW5kIH19CnNwZWM6CiAgc2NoZWR1bGU6ICJ7eyAuU2NoZWR1bGUgfX0iCiAgY29uY3VycmVuY3lQb2xpY3k6IEZvcmJpZAogIGpvYlRlbXBsYXRlOgogICAgc3BlYzoKICAgICAgdGVtcGxhdGU6CiAgICAgICAgc3BlYzoKICAgICAgICAgIGNvbnRhaW5lcnM6CiAgICAgICAgICAtIG5hbWU6IGN1cmxpbWFnZQogICAgICAgICAgICB7ey0gaWYgLlJlZ2lzdHJ5IH19CiAgICAgICAgICAgIGltYWdlOiB7eyAuUmVnaXN0cnkgfX0vY3VybGltYWdlcy9jdXJsCiAgICAgICAgICAgIHt7LSBlbHNlIH19CiAgICAgICAgICAgIGltYWdlOiBjdXJsaW1hZ2VzL2N1cmwKICAgICAgICAgICAge3stIGVuZCB9fQogICAgICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogICAgICAgICAgICBjb21tYW5kOgogICAgICAgICAgICAtIHNoCiAgICAgICAgICAgIC0gLWMKICAgICAgICAgICAgYXJnczoKICAgICAgICAgICAgLSAnY3VybCAtWCBQT1NUIC1IICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iIC1kICcne3sgLkRhdGEgfX0nJyAiaHR0cDovL3t7IC5TZXJ2aWNlTmFtZSB9fTp7eyAuU2VydmljZVBvcnR9fS92MS97eyAuUmVzb3VyY2VVUkkgfX0ve3sgLklkIH19L2V4ZWN1dGlvbnMiJwogICAgICAgICAgcmVzdGFydFBvbGljeTogTmV2ZXIKICAgICAgYmFja29mZkxpbWl0OiAwCiAgICAgIHR0bFNlY29uZHNBZnRlckZpbmlzaGVkOiAxODAK"
        - name: APISERVER_REGISTRY
          value:  
        - name: NATS_URI
          value: "nats://testkube-values-nats"
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 10
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        {}
      serviceAccountName: testkube-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: testkube/charts/nats/templates/stateful-set.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: testkube-values-nats
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nats
      app.kubernetes.io/instance: testkube-values
      app.kubernetes.io/name: nats
  serviceName: testkube-values-nats-headless
  template:
    metadata:
      annotations:
        checksum/config: 9d24a8520db5c80ed563cd6ea8f8c507c4d709a4c4b18877186149b6c76baafd
      labels:
        app.kubernetes.io/component: nats
        app.kubernetes.io/instance: testkube-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nats
        app.kubernetes.io/version: 2.10.9
        helm.sh/chart: nats-1.1.7
    spec:
      containers:
      - args:
        - --config
        - /etc/nats-config/nats.conf
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVER_NAME
          value: $(POD_NAME)
        image: nats:2.10.9-alpine
        lifecycle:
          preStop:
            exec:
              command:
              - nats-server
              - -sl=ldm=/var/run/nats/nats.pid
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz?js-enabled-only=true
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: nats
        ports:
        - containerPort: 4222
          name: nats
        - containerPort: 8222
          name: monitor
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz?js-server-only=true
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        startupProbe:
          failureThreshold: 90
          httpGet:
            path: /healthz
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /etc/nats-config
          name: config
        - mountPath: /var/run/nats
          name: pid
        - mountPath: /data
          name: testkube-values-nats-js
      - args:
        - -pid
        - /var/run/nats/nats.pid
        - -config
        - /etc/nats-config/nats.conf
        image: natsio/nats-server-config-reloader:0.14.1
        name: reloader
        volumeMounts:
        - mountPath: /var/run/nats
          name: pid
        - mountPath: /etc/nats-config
          name: config
      enableServiceLinks: false
      shareProcessNamespace: true
      volumes:
      - configMap:
          name: testkube-values-nats-config
        name: config
      - emptyDir: {}
        name: pid
  volumeClaimTemplates:
  - metadata:
      name: testkube-values-nats-js
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
---
# Source: testkube/charts/testkube-api/templates/role.yaml
---
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
---
---
# Source: testkube/charts/testkube-operator/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: testkube-values-testkube-operator-webhook-admission
  annotations:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/version: "1.16.25"
    helm.sh/chart: testkube-operator-1.16.25
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: testkube-values
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: testkube-operator-webhook-service
      namespace: testkube
      path: /validate-tests-testkube-io-v1-testtrigger
  failurePolicy: Fail
  name: vtesttrigger.kb.io
  rules:
  - apiGroups:
    - tests.testkube.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - testtriggers
  sideEffects: None
---
# Source: testkube/charts/testkube-operator/templates/pre-upgrade-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-values-operator-pre-upgrade-sa
  namespace: testkube
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: testkube/charts/testkube-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-operator-webhook-cert-mgr
  namespace: testkube
  labels:
    app.kubernetes.io/version: "1.16.25"
    helm.sh/chart: testkube-operator-1.16.25
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/component: admission-webhook
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: testkube/templates/pre-upgrade-sa-nats.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "nats-upgrade"
  labels:
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
# Source: testkube/templates/pre-upgrade-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/name: mongodb-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
# Source: testkube/charts/testkube-operator/templates/pre-upgrade-sa.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: testkube-values-operator-pre-upgrade-role
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["create","delete","get","list","patch","update","watch"]
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: testkube-values-webhook-cert-mgr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/version: "1.16.25"
    helm.sh/chart: testkube-operator-1.16.25
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/component: admission-webhook
  namespace: testkube
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - update
---
# Source: testkube/charts/testkube-operator/templates/pre-upgrade-sa.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: testkube-values-operator-pre-upgrade-rolebinding
  namespace: testkube
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: testkube-values-operator-pre-upgrade-role
subjects:
  - kind: ServiceAccount
    name: testkube-values-operator-pre-upgrade-sa
    namespace: testkube
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: testkube-values-operator-webhook-cert-mgr
  namespace: testkube
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/version: "1.16.25"
    helm.sh/chart: testkube-operator-1.16.25
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/component: admission-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: testkube-values-webhook-cert-mgr
subjects:
  - kind: ServiceAccount
    name: testkube-operator-webhook-cert-mgr
    namespace: testkube
---
# Source: testkube/templates/pre-upgrade-sa-nats.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "nats-upgrade"
  labels:
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/scale", "statefulsets"]
    verbs: ["create","delete","get","list","patch","update","watch"]
---
# Source: testkube/templates/pre-upgrade-sa.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/name: mongodb-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/scale"]
    verbs: ["create","delete","get","list","patch","update","watch"]
---
# Source: testkube/templates/pre-upgrade-sa-nats.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "nats-upgrade"
  labels:
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "nats-upgrade"
subjects:
  - kind: ServiceAccount
    name: "nats-upgrade"
---
# Source: testkube/templates/pre-upgrade-sa.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/name: mongodb-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "mongodb-upgrade"
subjects:
  - kind: ServiceAccount
    name: "mongodb-upgrade"
---
# Source: testkube/charts/nats/templates/tests/request-reply.yaml
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: test-request-reply
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: testkube-values-nats-test-request-reply
spec:
  containers:
  - args:
    - nats reply --echo echo & pid="$!"; sleep 1; nats request echo hi > /tmp/resp;
      kill "$pid"; wait; grep -qF hi /tmp/resp
    command:
    - sh
    - -ec
    - |
      work_dir="$(pwd)"
      mkdir -p "$XDG_CONFIG_HOME/nats"
      cd "$XDG_CONFIG_HOME/nats"
      if ! [ -s context ]; then
        ln -s /etc/nats-contexts context
      fi
      if ! [ -f context.txt ]; then
        echo -n "default" > context.txt
      fi
      cd "$work_dir"
      exec sh -ec "$0"
    image: natsio/nats-box:0.14.1
    name: nats-box
    volumeMounts:
    - mountPath: /etc/nats-contexts
      name: contexts
  enableServiceLinks: false
  restartPolicy: Never
  tolerations:
  - effect: NoSchedule
    key: kubernetes.io/arch
    operator: Equal
    value: arm64
  volumes:
  - name: contexts
    secret:
      secretName: testkube-values-nats-box-contexts
---
# Source: testkube/charts/testkube-api/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "testkube-api-server-test-connection"
  labels:
    helm.sh/chart: testkube-api-1.16.27
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['testkube-api-server:8088']
  restartPolicy: Never
  tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
---
# Source: testkube/charts/testkube-dashboard/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "testkube-dashboard-test-connection"
  labels:
    helm.sh/chart: testkube-dashboard-1.16.5
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['testkube-dashboard:8080']
  restartPolicy: Never
  tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
---
# Source: testkube/charts/testkube-operator/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "testkube-operator-test-connection"
  labels:
    app.kubernetes.io/version: "1.16.25"
    helm.sh/chart: testkube-operator-1.16.25
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: testkube-values
  annotations:
    "helm.sh/hook": test
  namespace: testkube
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['testkube-operator:80']
  restartPolicy: Never
  tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
---
# Source: testkube/charts/testkube-operator/templates/pre-upgrade.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: testkube-values-operator-pre-upgrade
  labels:
    helm.sh/chart: "testkube-operator-1.16.25"
    job-name: testkube-values-operator-pre-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade, pre-install
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      name: testkube-values-operator-pre-upgrade
      labels:
        app.kubernetes.io/component: testkube-operator
        app.kubernetes.io/name: testkube-values-operator-pre-upgrade
      annotations:
    spec:
      serviceAccountName:  testkube-values-operator-pre-upgrade-sa
      
      containers:
      - name: kubectl
        image: docker.io/bitnami/kubectl:1.28.2
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - >
            NAMESPACE=testkube
            echo "Checking if namespace ${NAMESPACE} exists"
              if kubectl get namespaces ${NAMESPACE}
                then echo "Namespace already exists";
              else
                echo "creating namespace ${NAMESPACE}"
                kubectl create namespace ${NAMESPACE};
              fi
        securityContext:
          {}
      securityContext:
        {}
      restartPolicy: Never
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/charts/testkube-operator/templates/webhook-cert-create.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: webhook-cert-create
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "6"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/version: "1.16.25"
    helm.sh/chart: testkube-operator-1.16.25
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/component: admission-webhook
  namespace: testkube
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/version: "1.16.25"
        helm.sh/chart: testkube-operator-1.16.25
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: testkube-operator
        app.kubernetes.io/instance: testkube-values
        app.kubernetes.io/component: admission-webhook
    spec:
      
      initContainers:
        - name: migrate
          image: docker.io/rancher/kubectl:v1.23.7
          imagePullPolicy: IfNotPresent
          args:
            - delete
            - secret
            - webhook-server-cert
            - --namespace
            - testkube
            - --ignore-not-found
          securityContext:
            readOnlyRootFilesystem: true
      containers:
        - name: create
          image: docker.io/dpejcev/kube-webhook-certgen:1.0.11
          imagePullPolicy: Always
          args:
            - create
            - --host
            - testkube-operator-webhook-service.testkube,testkube-operator-webhook-service.testkube.svc
            - --namespace
            - testkube
            - --secret-name
            - webhook-server-cert
            - --key-name
            - tls.key
            - --cert-name
            - tls.crt
            - --ca-name
            - ca.crt
          securityContext:
            readOnlyRootFilesystem: true
      restartPolicy: OnFailure
      serviceAccountName: testkube-operator-webhook-cert-mgr
      nodeSelector: 
        kubernetes.io/os: linux
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  backoffLimit: 5
---
# Source: testkube/charts/testkube-operator/templates/webhook-cert-patch.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: webhook-cert-patch
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "6"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/version: "1.16.25"
    helm.sh/chart: testkube-operator-1.16.25
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/component: admission-webhook
  namespace: testkube
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/version: "1.16.25"
        helm.sh/chart: testkube-operator-1.16.25
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: testkube-operator
        app.kubernetes.io/instance: testkube-values
        app.kubernetes.io/component: admission-webhook
    spec:
      
      containers:
        - name: patch
          image: docker.io/dpejcev/kube-webhook-certgen:1.0.11
          imagePullPolicy: Always
          args:
            - patch
            - --namespace
            - testkube
            - --secret-name
            - webhook-server-cert
            - --webhook-name
            - testkube-values-testkube-operator-webhook-admission
            - --patch-validating=true
            - --patch-mutating=false
            - --crd-api-groups
            - tests.testkube.io,executor.testkube.io
          securityContext:
            readOnlyRootFilesystem: true
      restartPolicy: Never
      serviceAccountName: testkube-operator-webhook-cert-mgr
      nodeSelector: 
        kubernetes.io/os: linux
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  backoffLimit: 1
---
# Source: testkube/templates/pre-upgrade-nats.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "nats-upgrade"
  labels:
    helm.sh/chart: "testkube-1.16.39"
    job-name: pre-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      name: "nats-upgrade"
      labels:
        app.kubernetes.io/component: nats
        app.kubernetes.io/name: "nats-upgrade"
    spec:
      serviceAccountName: "nats-upgrade"
      
      containers:
      - name: kubectl
        image: docker.io/bitnami/kubectl:1.28.2
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - >
            export deployment_name=$(kubectl get deployments -n testkube -o custom-columns=NAME:.metadata.name | grep 'box');
            export sts_name=$(kubectl get sts -n testkube -o custom-columns=NAME:.metadata.name | grep 'nats');
            export current_nats_version=$(kubectl get sts $sts_name -o=jsonpath='{$.metadata.labels}' -n testkube | awk -F'chart' '{print $2}' | awk -F'[^0-9]+' '{ print $2"."$3"."$4 }');

            if [ "$current_nats_version" = "0.19.1" ];
              then kubectl delete deployment $deployment_name -n testkube;
                   kubectl delete sts $sts_name -n testkube;
              else echo "NATS version is up-to-date";
            fi
        securityContext:
          {}
      securityContext:
        {}
      restartPolicy: Never
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/templates/pre-upgrade.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: testkube-values
    app.kubernetes.io/name: mongodb-upgrade
    helm.sh/chart: "testkube-1.16.39"
    job-name: pre-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      name: "mongodb-upgrade"
      labels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/name: "mongodb-upgrade"
    spec:
      serviceAccountName: "mongodb-upgrade"
      
      containers:
      - name: kubectl
        image: docker.io/bitnami/kubectl:1.28.2
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - >
            export current_mongodb_version=$(kubectl get deployment testkube-values-mongodb -o=jsonpath='{$.spec.template.metadata.labels}' -n testkube | awk -F'helm.sh/chart' '{print $2}' | awk -F'[^0-9]+' '{ print $2 }');
            if [ "$current_mongodb_version" -eq "12" ];
              then kubectl scale deployment testkube-values-mongodb --replicas=0 -n testkube;
              else echo "MongoDB is up-to-date";
            fi
        securityContext:
          {}
      securityContext:
        {}
      restartPolicy: Never
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
